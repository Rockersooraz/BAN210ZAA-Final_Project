*------------------------------------------------------------*
User:                Nikee
Date:                August 07, 2022
Time:                18:16:40
Site:                70192439
Platform:            X64_8HOME
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 07, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18:16:37" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                August 07, 2022
Time:                18:16:37
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O20UA1SB "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O20UA1SB new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 07, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18:16:37" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Nikee";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70192439";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8HOME";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M3P062415";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 07, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18:16:38" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Nikee";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\\BAN210PA\Workspaces\EMWS1\Impt\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\\BAN210PA\Workspaces\EMWS1\Impt\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
36206      proc freq data=EMWS1.Impt_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Impt_VariableSet noprint;
36207      table ROLE*LEVEL/out=WORK.ImptMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ImptMETA;
36208      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.IMPT_VARIABLESET.
NOTE: The data set WORK.IMPTMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
36209      proc print data=WORK.ImptMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ImptMETA label noobs;
36210      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
36211      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
36212      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
36213      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
36214      run;
 
NOTE: There were 4 observations read from the data set WORK.IMPTMETA.
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
36215      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M16HD_29;
MPRINT(EM_DIAGRAM):   set WORK.M16HD_29;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (ROLE ne 'REJECTED' and USE = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and METHOD='DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' then METHOD = "COUNT";
MPRINT(EM_DIAGRAM):   else METHOD = "MEAN";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role = 'TARGET' and METHOD='DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' then METHOD = "NONE";
MPRINT(EM_DIAGRAM):   else METHOD = "NONE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
36233      data WORK.Impt_TREEINPUTS;
MPRINT(EM_DIAGRAM):    data WORK.Impt_TREEINPUTS;
36234      set WORK.M2RNY3UX;
MPRINT(EM_DIAGRAM):   set WORK.M2RNY3UX;
36235      if ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'FREQ' then do;
36236      if ((ROLE in('TARGET','REJECTED') and useTree='D') or useTree='N') then delete;
MPRINT(EM_DIAGRAM):   if ((ROLE in('TARGET','REJECTED') and useTree='D') or useTree='N') then delete;
36237      ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   ROLE = 'INPUT';
36238      end;
MPRINT(EM_DIAGRAM):   end;
36239      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.M2RNY3UX.
NOTE: The data set WORK.IMPT_TREEINPUTS has 9 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
36240      data WORK.M2RNY3UX;
MPRINT(EM_DIAGRAM):   data WORK.M2RNY3UX;
36241      set WORK.M2RNY3UX;
MPRINT(EM_DIAGRAM):   set WORK.M2RNY3UX;
36242      if METHOD in("TREE", "TREESURR") then role = 'TARGET';
MPRINT(EM_DIAGRAM):   if METHOD in("TREE", "TREESURR") then role = 'TARGET';
36243      else if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if (role = 'REJECTED') then role = 'INPUT';
36244      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.M2RNY3UX.
NOTE: The data set WORK.M2RNY3UX has 10 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
36245      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
36246      * Impt: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Impt: DMDBClass Macro ;
36247      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
36248      %macro DMDBClass;
36249          age(ASC) breast(ASC) breast_quad(ASC) class(DESC) inv_nodes(ASC) irradiat(ASC)
36250         menopause(ASC) node_caps(ASC) tumor_size(ASC)
36251      %mend DMDBClass;
36252      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
36253      * Impt: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Impt: DMDBVar Macro ;
36254      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
36255      %macro DMDBVar;
36256          REP_deg_malig
36257      %mend DMDBVar;
36258      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36259      * Impt: Create DMDB;
MPRINT(EM_DIAGRAM):   * Impt: Create DMDB;
36260      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36261      proc dmdb batch data=EMWS1.Repl_TRAIN
36262      dmdbcat=WORK.Impt_DMDB
36263      classout=WORK.Impt_DMDBCLASSOUT
36264      varout=WORK.IMPUTE_1M46W3D_DMDBVAROUT
36265      maxlevel = 513
36266      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Repl_TRAIN dmdbcat=WORK.Impt_DMDB classout=WORK.Impt_DMDBCLASSOUT varout=WORK.IMPUTE_1M46W3D_DMDBVAROUT maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
36267      class %DMDBClass;
MPRINT(DMDBCLASS):   age(ASC) breast(ASC) breast_quad(ASC) class(DESC) inv_nodes(ASC) irradiat(ASC) menopause(ASC) node_caps(ASC) tumor_size(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
36268      var %DMDBVar;
MPRINT(DMDBVAR):   REP_deg_malig
MPRINT(EM_DIAGRAM):  ;
36269      target
36270      class
36271      ;
MPRINT(EM_DIAGRAM):   target class ;
36272      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 113   Memory used = 511K.
NOTE: View EMWS1.REPL_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: There were 113 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 113 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 40 observations and 9 variables.
NOTE: The data set WORK.IMPUTE_1M46W3D_DMDBVAROUT has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
36273      quit;
36274      *--- end code ---*;
 
36275      proc sort data=WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Impt_DMDBCLASSOUT;
36276      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
36277      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 40 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
36278      data WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):   data WORK.Impt_DMDBCLASSOUT;
36279      retain missFlag;
MPRINT(EM_DIAGRAM):   retain missFlag;
36280      set WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):   set WORK.Impt_DMDBCLASSOUT;
36281      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
36282      output;
MPRINT(EM_DIAGRAM):   output;
36283      if first.name then missflag = 0;
MPRINT(EM_DIAGRAM):   if first.name then missflag = 0;
36284      if (TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.) then missflag = 1;
MPRINT(EM_DIAGRAM):   if (TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.) then missflag = 1;
36285      if last.name and ^missFlag then do;
MPRINT(EM_DIAGRAM):   if last.name and ^missFlag then do;
36286      if type = 'C' then do;
MPRINT(EM_DIAGRAM):   if type = 'C' then do;
36287      LEVEL= '';
MPRINT(EM_DIAGRAM):   LEVEL= '';
36288      CRAW = '';
MPRINT(EM_DIAGRAM):   CRAW = '';
36289      NRAW = .;
MPRINT(EM_DIAGRAM):   NRAW = .;
36290      end;
MPRINT(EM_DIAGRAM):   end;
36291      else do;
MPRINT(EM_DIAGRAM):   else do;
36292      LEVEL='.';
MPRINT(EM_DIAGRAM):   LEVEL='.';
36293      CRAW = '.';
MPRINT(EM_DIAGRAM):   CRAW = '.';
36294      NRAW= .;
MPRINT(EM_DIAGRAM):   NRAW= .;
36295      end;
MPRINT(EM_DIAGRAM):   end;
36296      FREQUENCY = 0;
MPRINT(EM_DIAGRAM):   FREQUENCY = 0;
36297      FREQPERCENT = 0;
MPRINT(EM_DIAGRAM):   FREQPERCENT = 0;
36298      NMISSPERCENT = 0;
MPRINT(EM_DIAGRAM):   NMISSPERCENT = 0;
36299      output;
MPRINT(EM_DIAGRAM):   output;
36300      end;
MPRINT(EM_DIAGRAM):   end;
36301      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 49 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
36302      data WORK.Impt_MISS(KEEP=NAME NMISS PERCENTMISS);
MPRINT(EM_DIAGRAM):    data WORK.Impt_MISS(KEEP=NAME NMISS PERCENTMISS);
36303      length NAME $32;
MPRINT(EM_DIAGRAM):   length NAME $32;
36304      set
36305      WORK.Impt_DMDBCLASSOUT(rename=(freqpercent=PERCENTMISS frequency=NMISS) where=((TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.)))
36306      WORK.IMPUTE_1M46W3D_DMDBVAROUT
36307      ;
MPRINT(EM_DIAGRAM):   set WORK.Impt_DMDBCLASSOUT(rename=(freqpercent=PERCENTMISS frequency=NMISS) where=((TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.))) WORK.IMPUTE_1M46W3D_DMDBVAROUT ;
36308      if (NMISS ne . and N ne .) then PERCENTMISS = (NMISS/(NMISS+N))*100;
MPRINT(EM_DIAGRAM):   if (NMISS ne . and N ne .) then PERCENTMISS = (NMISS/(NMISS+N))*100;
36309      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
      WHERE ((TYPE='C') and (CRAW=' ')) or ((TYPE='N') and (NRAW=.));
NOTE: There were 1 observations read from the data set WORK.IMPUTE_1M46W3D_DMDBVAROUT.
NOTE: The data set WORK.IMPT_MISS has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
36310      proc sort data=WORK.M16HD_29 NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M16HD_29 NOTHREADS;
36311      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
36312      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.M16HD_29.
NOTE: The data set WORK.M16HD_29 has 10 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
36313      proc sort data=WORK.Impt_MISS NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Impt_MISS NOTHREADS;
36314      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
36315      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.IMPT_MISS.
NOTE: The data set WORK.IMPT_MISS has 10 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
36316      data WORK.M16HD_29;
MPRINT(EM_DIAGRAM):   data WORK.M16HD_29;
36317      merge WORK.M16HD_29 WORK.Impt_MISS(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M16HD_29 WORK.Impt_MISS(in=_b);
36318      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
36319      if _b then output;
MPRINT(EM_DIAGRAM):   if _b then output;
36320      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.M16HD_29.
NOTE: There were 10 observations read from the data set WORK.IMPT_MISS.
NOTE: The data set WORK.M16HD_29 has 10 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
36321      data WORK.M16HD_29;
MPRINT(EM_DIAGRAM):   data WORK.M16HD_29;
36322      set WORK.M16HD_29;
MPRINT(EM_DIAGRAM):   set WORK.M16HD_29;
36323      if 0<PERCENTMISS<50 and method ne 'NONE' then IMPUTE = 1;
MPRINT(EM_DIAGRAM):   if 0<PERCENTMISS<50 and method ne 'NONE' then IMPUTE = 1;
36324      else IMPUTE = 0;
MPRINT(EM_DIAGRAM):   else IMPUTE = 0;
36325      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.M16HD_29.
NOTE: The data set WORK.M16HD_29 has 10 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
36326      proc dmdb data=WORK.M16HD_29 outtable=WORK.NEWNAMES nameserver;
MPRINT(EM_DIAGRAM):    proc dmdb data=WORK.M16HD_29 outtable=WORK.NEWNAMES nameserver;
36327      names NAME;
MPRINT(EM_DIAGRAM):   names NAME;
36328      prefix M_ IMP_;
MPRINT(EM_DIAGRAM):   prefix M_ IMP_;
36329      where IMPUTE=1;
MPRINT(EM_DIAGRAM):   where IMPUTE=1;
36330      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.M16HD_29.
      WHERE IMPUTE=1;
NOTE: The data set WORK.NEWNAMES has 0 observations and 3 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
36331      data WORK.M16HD_29;
MPRINT(EM_DIAGRAM):   data WORK.M16HD_29;
36332      merge WORK.M16HD_29 WORK.NEWNAMES;
MPRINT(EM_DIAGRAM):   merge WORK.M16HD_29 WORK.NEWNAMES;
36333      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
36334      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.M16HD_29.
NOTE: There were 0 observations read from the data set WORK.NEWNAMES.
NOTE: The data set WORK.M16HD_29 has 10 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
36335      proc dmdb data=WORK.M16HD_29 outtable=WORK.NEWNAMES nameserver;
MPRINT(EM_DIAGRAM):   proc dmdb data=WORK.M16HD_29 outtable=WORK.NEWNAMES nameserver;
36336      names NAME;
MPRINT(EM_DIAGRAM):   names NAME;
36337      prefix M_;
MPRINT(EM_DIAGRAM):   prefix M_;
36338      where IMPUTE=0;
MPRINT(EM_DIAGRAM):   where IMPUTE=0;
36339      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.M16HD_29.
      WHERE IMPUTE=0;
NOTE: The data set WORK.NEWNAMES has 10 observations and 2 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
36340      data WORK.M16HD_29;
MPRINT(EM_DIAGRAM):   data WORK.M16HD_29;
36341      merge WORK.M16HD_29 WORK.NEWNAMES;
MPRINT(EM_DIAGRAM):   merge WORK.M16HD_29 WORK.NEWNAMES;
36342      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
36343      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.M16HD_29.
NOTE: There were 10 observations read from the data set WORK.NEWNAMES.
NOTE: The data set WORK.M16HD_29 has 10 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
36344      data WORK.Impt;
MPRINT(EM_DIAGRAM):    data WORK.Impt;
36345      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.IMPT has 1 observations and 0 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS1.REPL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
36346      data EMWS1.Impt_META;
MPRINT(EM_DIAGRAM):    data EMWS1.Impt_META;
36347      set WORK.M16HD_29;
MPRINT(EM_DIAGRAM):   set WORK.M16HD_29;
36348      VALUE = .;
MPRINT(EM_DIAGRAM):   VALUE = .;
36349      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.M16HD_29.
NOTE: The data set EMWS1.IMPT_META has 10 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
36350      proc print data=EMWS1.Impt_META(obs=500) label noobs;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.Impt_META(obs=500) label noobs;
36351      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,          NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,         NOQUOTE))" PERCENTMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_percentmissing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" PERCENTMISS = "Percent Missing";
36352      var NAME LABEL PERCENTMISS;
MPRINT(EM_DIAGRAM):   var NAME LABEL PERCENTMISS;
36353      where IMP eq '' and PERCENTMISS>50;
MPRINT(EM_DIAGRAM):   where IMP eq '' and PERCENTMISS>50;
36354      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rejectedsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Rejected Variables Summary";
36355      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_numberobs_title,         NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Number Of Observations";
MPRINT(EM_DIAGRAM):   run;
36356      run;
 
NOTE: No observations were selected from data set EMWS1.IMPT_META.
NOTE: There were 0 observations read from the data set EMWS1.IMPT_META.
      WHERE (IMP=' ') and (PERCENTMISS>50);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 07, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18:16:39" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                August 07, 2022
Time:                18:16:39
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3FTLLX3 "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3FTLLX3 new;
MPRINT(EM_DIAGRAM):   run;
36458      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
36459      set EMWS1.Impt_META end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_META end=eof;
36460      length string $34;
MPRINT(EM_DIAGRAM):   length string $34;
36461      retain missTotal;
MPRINT(EM_DIAGRAM):   retain missTotal;
36462      file #LN00600;
MPRINT(EM_DIAGRAM):   file #LN00600;
36463      if _n_=1 then misstotal = percentmiss;
MPRINT(EM_DIAGRAM):   if _n_=1 then misstotal = percentmiss;
36464      missTotal = percentmiss+misstotal;
MPRINT(EM_DIAGRAM):   missTotal = percentmiss+misstotal;
36465      if IMP ne '' and METHOD ne 'NONE' then do;
MPRINT(EM_DIAGRAM):   if IMP ne '' and METHOD ne 'NONE' then do;
36466      string = '"'!!strip(NAME)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(NAME)!!'"';
36467      put 'if NAME = ' string 'then delete;';
MPRINT(EM_DIAGRAM):   put 'if NAME = ' string 'then delete;';
36468      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
36469      string = '"'!!strip(IMP)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(IMP)!!'"';
36470      put 'if NAME    = ' string ' then do;';
MPRINT(EM_DIAGRAM):   put 'if NAME    = ' string ' then do;';
36471      string = '"'!!strip(ROLE)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(ROLE)!!'"';
36472      put '   ROLE    = ' string ';';
MPRINT(EM_DIAGRAM):   put '   ROLE    = ' string ';';
36473      string = '"'!!strip(FAMILY)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(FAMILY)!!'"';
36474      put '   FAMILY  = ' string ';';
MPRINT(EM_DIAGRAM):   put '   FAMILY  = ' string ';';
36475      string = '"'!!strip(REPORT)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(REPORT)!!'"';
36476      put '   REPORT  = ' string ';';
MPRINT(EM_DIAGRAM):   put '   REPORT  = ' string ';';
36477      string = '"'!!strip(LEVEL)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(LEVEL)!!'"';
36478      put '   LEVEL   = ' string ';';
MPRINT(EM_DIAGRAM):   put '   LEVEL   = ' string ';';
36479      string = '"'!!strip(ORDER)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(ORDER)!!'"';
36480      put '   ORDER   = ' string ';';
MPRINT(EM_DIAGRAM):   put '   ORDER   = ' string ';';
36481      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
36482      end;
MPRINT(EM_DIAGRAM):   end;
36483      if percentmiss>50 and ROLE ne 'TARGET' then do;
MPRINT(EM_DIAGRAM):   if percentmiss>50 and ROLE ne 'TARGET' then do;
36484      string = '"'!!strip(NAME)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(NAME)!!'"';
36485      put 'if NAME = ' string ' then do;';
MPRINT(EM_DIAGRAM):   put 'if NAME = ' string ' then do;';
36486      put '   ROLE ="REJECTED";';
MPRINT(EM_DIAGRAM):   put '   ROLE ="REJECTED";';
36487      put '   COMMENT = "Percent of missing exceeds 50%";';
MPRINT(EM_DIAGRAM):   put '   COMMENT = "Percent of missing exceeds 50%";';
36488      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
36489      end;
MPRINT(EM_DIAGRAM):   end;
36490      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file #LN00600 is:
      Filename=D:\\BAN210PA\Workspaces\EMWS1\Impt\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=07Aug2022:18:16:39,
      Create Time=07Aug2022:18:16:39
 
NOTE: 0 records were written to the file #LN00600.
NOTE: There were 10 observations read from the data set EMWS1.IMPT_META.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
36491      filename emflow "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36492      *------------------------------------------------------------*;
36493      * Impt: Scoring DATA data;
36494      *------------------------------------------------------------*;
36495      data EMWS1.Impt_TRAIN
36496      / view=EMWS1.Impt_TRAIN
36497      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_TRAIN / view=EMWS1.Impt_TRAIN ;
36498      set EMWS1.Repl_TRAIN
36499      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Repl_TRAIN ;
36500      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file D:\\BAN210PA\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas.
36501     +*;
MPRINT(EM_DIAGRAM):   *;
36502     +*MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
MPRINT(EM_DIAGRAM):   *MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
36503     +*;
MPRINT(EM_DIAGRAM):   *;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
36504      run;
 
NOTE: DATA STEP view saved on file EMWS1.IMPT_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REPL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
36505      quit;
36506      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
36507      filename emflow "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36508      *------------------------------------------------------------*;
36509      * Impt: Scoring VALIDATE data;
36510      *------------------------------------------------------------*;
36511      data EMWS1.Impt_VALIDATE
36512      / view=EMWS1.Impt_VALIDATE
36513      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_VALIDATE / view=EMWS1.Impt_VALIDATE ;
36514      set EMWS1.Repl_VALIDATE
36515      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Repl_VALIDATE ;
36516      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file D:\\BAN210PA\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas.
36517     +*;
MPRINT(EM_DIAGRAM):   *;
36518     +*MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
MPRINT(EM_DIAGRAM):   *MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
36519     +*;
MPRINT(EM_DIAGRAM):   *;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
36520      run;
 
NOTE: DATA STEP view saved on file EMWS1.IMPT_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REPL_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
36521      quit;
36522      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
36523      filename emflow "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36524      *------------------------------------------------------------*;
36525      * Impt: Scoring TEST data;
36526      *------------------------------------------------------------*;
36527      data EMWS1.Impt_TEST
36528      / view=EMWS1.Impt_TEST
36529      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_TEST / view=EMWS1.Impt_TEST ;
36530      set EMWS1.Repl_TEST
36531      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Repl_TEST ;
36532      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file D:\\BAN210PA\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas.
36533     +*;
MPRINT(EM_DIAGRAM):   *;
36534     +*MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
MPRINT(EM_DIAGRAM):   *MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
36535     +*;
MPRINT(EM_DIAGRAM):   *;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
36536      run;
 
NOTE: DATA STEP view saved on file EMWS1.IMPT_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REPL_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
36537      quit;
36538      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
36539      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
36540      * Impt: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Impt: Computing metadata for TRAIN data;
36541      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "D:\\BAN210PA\Workspaces\EMWS1\Impt\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Impt_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Impt_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Impt_TRAIN out=WORK.M0FGMOSV noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FGMOSV;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FGMOSV(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FGMOSV;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FGMOSV;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M27LRSDP NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27LRSDP;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M27LRSDP;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M04PYUCX(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M27LRSDP;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27LRSDP;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M27LRSDP;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27LRSDP;
MPRINT(EMADVISECOLUMNS):   set WORK.M27LRSDP;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Repl_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Repl_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Impt";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS1.IMPT_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS1.IMPT_TEST.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 07, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18:16:40" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                August 07, 2022
Time:                18:16:40
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1E59DXF "D:\\BAN210PA\Workspaces\EMWS1\Impt\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1E59DXF new;
MPRINT(EM_DIAGRAM):   run;
36902      %let _nimpute = 0;
36903      data EMWS1.Impt_RESULT;
MPRINT(EM_DIAGRAM):    data EMWS1.Impt_RESULT;
36904      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,        NOQUOTE))" METHOD = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputemethod_vlabel, NOQUOTE))" IMPUTED = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputedvar_vlabel,   NOQUOTE))" INDICATOR
36904    !  =
36905         "%sysfunc(sasmsg(sashelp.dmine, rpt_indicatorvar_vlabel, NOQUOTE))" VALUE = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputevalue_vlabel,  NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,        NOQUOTE))" LEVEL =
36906         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel,       NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,       NOQUOTE))" TRAIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_missingcount_vlabel, NOQUOTE, TRAIN))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" METHOD = "Impute Method" IMPUTED = "Imputed Variable" INDICATOR = "Indicator Variable" VALUE = "Impute Value" ROLE = "Role" LEVEL = "Measurement Level" LABEL = "Label" TRAIN = "Number of Missing for
TRAIN";
36907      set EMWS1.Impt_META(where=(IMPUTED ne '') keep=NAME METHOD IMP VALUE ROLE NMISS LEVEL LABEL rename=(IMP=IMPUTED NMISS=TRAIN)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_META(where=(IMPUTED ne '') keep=NAME METHOD IMP VALUE ROLE NMISS LEVEL LABEL rename=(IMP=IMPUTED NMISS=TRAIN)) end=eof;
36908      if eof then call symput('_nimpute', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_nimpute', '1');
36909      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable INDICATOR is uninitialized.
NOTE: There were 0 observations read from the data set EMWS1.IMPT_META.
      WHERE IMPUTED not = ' ';
NOTE: The data set EMWS1.IMPT_RESULT has 0 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
