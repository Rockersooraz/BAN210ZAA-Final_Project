*************************************;
*** begin scoring code for regression;
*************************************;

length _WARN_ $4;
label _WARN_ = 'Warnings' ;

length I_class $ 20;
label I_class = 'Into: class' ;
*** Target Values;
array REGDRF [2] $20 _temporary_ ('RECURRENCE-EVENTS' 'NO-RECURRENCE-EVENTS' 
        );
label U_class = 'Unnormalized Into: class' ;
format U_class $20.;
length U_class $ 20;
*** Unnormalized target values;
array REGDRU[2] $ 20 _temporary_ ('recurrence-events   '  
'no-recurrence-events' );

drop _DM_BAD;
_DM_BAD=0;

*** Check REP_deg_malig for missing values ;
if missing( REP_deg_malig ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;

*** Generate dummy variables for age ;
drop _1_0 _1_1 _1_2 _1_3 ;
*** encoding is sparse, initialize to zero;
_1_0 = 0;
_1_1 = 0;
_1_2 = 0;
_1_3 = 0;
if missing( age ) then do;
   _1_0 = .;
   _1_1 = .;
   _1_2 = .;
   _1_3 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm5 $ 5; drop _dm5 ;
   _dm5 = put( age , $5. );
   %DMNORMIP( _dm5 )
   _dm_find = 0; drop _dm_find;
   if _dm5 <= '50-59'  then do;
      if _dm5 <= '40-49'  then do;
         if _dm5 = '30-39'  then do;
            _1_0 = 1;
            _dm_find = 1;
         end;
         else do;
            if _dm5 = '40-49'  then do;
               _1_1 = 1;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm5 = '50-59'  then do;
            _1_2 = 1;
            _dm_find = 1;
         end;
      end;
   end;
   else do;
      if _dm5 = '60-69'  then do;
         _1_3 = 1;
         _dm_find = 1;
      end;
      else do;
         if _dm5 = '70-79'  then do;
            _1_0 = -1;
            _1_1 = -1;
            _1_2 = -1;
            _1_3 = -1;
            _dm_find = 1;
         end;
      end;
   end;
   if not _dm_find then do;
      _1_0 = .;
      _1_1 = .;
      _1_2 = .;
      _1_3 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for breast ;
drop _2_0 ;
if missing( breast ) then do;
   _2_0 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm5 $ 5; drop _dm5 ;
   _dm5 = put( breast , $5. );
   %DMNORMIP( _dm5 )
   if _dm5 = 'LEFT'  then do;
      _2_0 = 1;
   end;
   else if _dm5 = 'RIGHT'  then do;
      _2_0 = -1;
   end;
   else do;
      _2_0 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for breast_quad ;
drop _3_0 _3_1 _3_2 _3_3 _3_4 ;
*** encoding is sparse, initialize to zero;
_3_0 = 0;
_3_1 = 0;
_3_2 = 0;
_3_3 = 0;
_3_4 = 0;
if missing( breast_quad ) then do;
   _3_0 = .;
   _3_1 = .;
   _3_2 = .;
   _3_3 = .;
   _3_4 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm9 $ 9; drop _dm9 ;
   %DMNORMCP( breast_quad , _dm9 )
   if _dm9 = 'LEFT_LOW'  then do;
      _3_2 = 1;
   end;
   else if _dm9 = 'LEFT_UP'  then do;
      _3_3 = 1;
   end;
   else if _dm9 = 'RIGHT_UP'  then do;
      _3_0 = -1;
      _3_1 = -1;
      _3_2 = -1;
      _3_3 = -1;
      _3_4 = -1;
   end;
   else if _dm9 = 'CENTRAL'  then do;
      _3_1 = 1;
   end;
   else if _dm9 = 'RIGHT_LOW'  then do;
      _3_4 = 1;
   end;
   else if _dm9 = '?'  then do;
      _3_0 = 1;
   end;
   else do;
      _3_0 = .;
      _3_1 = .;
      _3_2 = .;
      _3_3 = .;
      _3_4 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for inv_nodes ;
drop _4_0 _4_1 _4_2 _4_3 _4_4 ;
*** encoding is sparse, initialize to zero;
_4_0 = 0;
_4_1 = 0;
_4_2 = 0;
_4_3 = 0;
_4_4 = 0;
if missing( inv_nodes ) then do;
   _4_0 = .;
   _4_1 = .;
   _4_2 = .;
   _4_3 = .;
   _4_4 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm5 $ 5; drop _dm5 ;
   _dm5 = put( inv_nodes , $5. );
   %DMNORMIP( _dm5 )
   if _dm5 = '0-2'  then do;
      _4_0 = 1;
   end;
   else if _dm5 = '44625'  then do;
      _4_3 = 1;
   end;
   else if _dm5 = '15-17'  then do;
      _4_1 = 1;
   end;
   else if _dm5 = '44815'  then do;
      _4_0 = -1;
      _4_1 = -1;
      _4_2 = -1;
      _4_3 = -1;
      _4_4 = -1;
   end;
   else if _dm5 = '44720'  then do;
      _4_4 = 1;
   end;
   else if _dm5 = '24-26'  then do;
      _4_2 = 1;
   end;
   else do;
      _4_0 = .;
      _4_1 = .;
      _4_2 = .;
      _4_3 = .;
      _4_4 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for irradiat ;
drop _5_0 ;
if missing( irradiat ) then do;
   _5_0 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm3 $ 3; drop _dm3 ;
   _dm3 = put( irradiat , $3. );
   %DMNORMIP( _dm3 )
   if _dm3 = 'NO'  then do;
      _5_0 = 1;
   end;
   else if _dm3 = 'YES'  then do;
      _5_0 = -1;
   end;
   else do;
      _5_0 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for menopause ;
drop _6_0 _6_1 ;
if missing( menopause ) then do;
   _6_0 = .;
   _6_1 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm7 $ 7; drop _dm7 ;
   _dm7 = put( menopause , $7. );
   %DMNORMIP( _dm7 )
   if _dm7 = 'PREMENO'  then do;
      _6_0 = -1;
      _6_1 = -1;
   end;
   else if _dm7 = 'GE40'  then do;
      _6_0 = 1;
      _6_1 = 0;
   end;
   else if _dm7 = 'LT40'  then do;
      _6_0 = 0;
      _6_1 = 1;
   end;
   else do;
      _6_0 = .;
      _6_1 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for node_caps ;
drop _7_0 _7_1 ;
if missing( node_caps ) then do;
   _7_0 = .;
   _7_1 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm3 $ 3; drop _dm3 ;
   %DMNORMCP( node_caps , _dm3 )
   if _dm3 = 'NO'  then do;
      _7_0 = 0;
      _7_1 = 1;
   end;
   else if _dm3 = 'YES'  then do;
      _7_0 = -1;
      _7_1 = -1;
   end;
   else if _dm3 = '?'  then do;
      _7_0 = 1;
      _7_1 = 0;
   end;
   else do;
      _7_0 = .;
      _7_1 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for tumor_size ;
drop _8_0 _8_1 _8_2 _8_3 _8_4 _8_5 _8_6 _8_7 _8_8 _8_9 ;
*** encoding is sparse, initialize to zero;
_8_0 = 0;
_8_1 = 0;
_8_2 = 0;
_8_3 = 0;
_8_4 = 0;
_8_5 = 0;
_8_6 = 0;
_8_7 = 0;
_8_8 = 0;
_8_9 = 0;
if missing( tumor_size ) then do;
   _8_0 = .;
   _8_1 = .;
   _8_2 = .;
   _8_3 = .;
   _8_4 = .;
   _8_5 = .;
   _8_6 = .;
   _8_7 = .;
   _8_8 = .;
   _8_9 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm5 $ 5; drop _dm5 ;
   %DMNORMCP( tumor_size , _dm5 )
   _dm_find = 0; drop _dm_find;
   if _dm5 <= '35-39'  then do;
      if _dm5 <= '20-24'  then do;
         if _dm5 <= '15-19'  then do;
            if _dm5 = '0-4'  then do;
               _8_0 = 1;
               _dm_find = 1;
            end;
            else do;
               if _dm5 = '15-19'  then do;
                  _8_1 = 1;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm5 = '20-24'  then do;
               _8_2 = 1;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm5 <= '30-34'  then do;
            if _dm5 = '25-29'  then do;
               _8_3 = 1;
               _dm_find = 1;
            end;
            else do;
               if _dm5 = '30-34'  then do;
                  _8_4 = 1;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm5 = '35-39'  then do;
               _8_5 = 1;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   else do;
      if _dm5 <= '44848'  then do;
         if _dm5 <= '44690'  then do;
            if _dm5 = '40-44'  then do;
               _8_6 = 1;
               _dm_find = 1;
            end;
            else do;
               if _dm5 = '44690'  then do;
                  _8_7 = 1;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm5 = '44848'  then do;
               _8_8 = 1;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm5 = '45-49'  then do;
            _8_9 = 1;
            _dm_find = 1;
         end;
         else do;
            if _dm5 = '50-54'  then do;
               _8_0 = -1;
               _8_1 = -1;
               _8_2 = -1;
               _8_3 = -1;
               _8_4 = -1;
               _8_5 = -1;
               _8_6 = -1;
               _8_7 = -1;
               _8_8 = -1;
               _8_9 = -1;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   if not _dm_find then do;
      _8_0 = .;
      _8_1 = .;
      _8_2 = .;
      _8_3 = .;
      _8_4 = .;
      _8_5 = .;
      _8_6 = .;
      _8_7 = .;
      _8_8 = .;
      _8_9 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** If missing inputs, use averages;
if _DM_BAD > 0 then do;
   _P0 = 0.2920353982;
   _P1 = 0.7079646018;
   goto REGDR1;
end;

*** Compute Linear Predictor;
drop _TEMP;
drop _LP0 ;
_LP0 = 0;

***  Effect: REP_deg_malig ;
_TEMP = REP_deg_malig ;
_LP0 = _LP0 + (    0.74188815265941 * _TEMP);

***  Effect: age ;
_TEMP = 1;
_LP0 = _LP0 + (     1.2711526472824) * _TEMP * _1_0;
_LP0 = _LP0 + (    3.51118587377913) * _TEMP * _1_1;
_LP0 = _LP0 + (    1.77015584013962) * _TEMP * _1_2;
_LP0 = _LP0 + (    3.24429045271765) * _TEMP * _1_3;

***  Effect: breast ;
_TEMP = 1;
_LP0 = _LP0 + (   -0.55362156774278) * _TEMP * _2_0;

***  Effect: breast_quad ;
_TEMP = 1;
_LP0 = _LP0 + (    13.7360898428639) * _TEMP * _3_0;
_LP0 = _LP0 + (   -1.34657631410209) * _TEMP * _3_1;
_LP0 = _LP0 + (   -2.87020658947285) * _TEMP * _3_2;
_LP0 = _LP0 + (   -3.60528108373917) * _TEMP * _3_3;
_LP0 = _LP0 + (   -2.02455025813794) * _TEMP * _3_4;

***  Effect: inv_nodes ;
_TEMP = 1;
_LP0 = _LP0 + (   -3.92999632834698) * _TEMP * _4_0;
_LP0 = _LP0 + (   -1.85577896916898) * _TEMP * _4_1;
_LP0 = _LP0 + (    11.4860062818446) * _TEMP * _4_2;
_LP0 = _LP0 + (   -2.40138030631945) * _TEMP * _4_3;
_LP0 = _LP0 + (   -1.69160020226667) * _TEMP * _4_4;

***  Effect: irradiat ;
_TEMP = 1;
_LP0 = _LP0 + (    0.05106811531383) * _TEMP * _5_0;

***  Effect: menopause ;
_TEMP = 1;
_LP0 = _LP0 + (    3.68241923615777) * _TEMP * _6_0;
_LP0 = _LP0 + (   -8.03309066307678) * _TEMP * _6_1;

***  Effect: node_caps ;
_TEMP = 1;
_LP0 = _LP0 + (   -9.61607022474882) * _TEMP * _7_0;
_LP0 = _LP0 + (     4.8963217947722) * _TEMP * _7_1;

***  Effect: tumor_size ;
_TEMP = 1;
_LP0 = _LP0 + (   -10.0604143863662) * _TEMP * _8_0;
_LP0 = _LP0 + (     4.6393813293927) * _TEMP * _8_1;
_LP0 = _LP0 + (    5.07127301211026) * _TEMP * _8_2;
_LP0 = _LP0 + (    5.06886354257634) * _TEMP * _8_3;
_LP0 = _LP0 + (    5.07640420879079) * _TEMP * _8_4;
_LP0 = _LP0 + (    3.66865920399611) * _TEMP * _8_5;
_LP0 = _LP0 + (    5.25094886049268) * _TEMP * _8_6;
_LP0 = _LP0 + (   -8.25096914859845) * _TEMP * _8_7;
_LP0 = _LP0 + (   -7.96985669817867) * _TEMP * _8_8;
_LP0 = _LP0 + (   -8.99285729799633) * _TEMP * _8_9;

*** Naive Posterior Probabilities;
drop _MAXP _IY _P0 _P1;
drop _LPMAX;
_LPMAX= 0;
_LP0 =    -12.2948238272586 + _LP0;
if _LPMAX < _LP0 then _LPMAX = _LP0;
_LP0 = exp(_LP0 - _LPMAX);
_LPMAX = exp(-_LPMAX);
_P1 = 1 / (_LPMAX + _LP0);
_P0 = _LP0 * _P1;
_P1 = _LPMAX * _P1;

REGDR1:


*** Posterior Probabilities and Predicted Level;
label P_classrecurrence_events = 'Predicted: class=recurrence-events' ;
label P_classno_recurrence_events = 'Predicted: class=no-recurrence-events' ;
P_classrecurrence_events = _P0;
_MAXP = _P0;
_IY = 1;
P_classno_recurrence_events = _P1;
if (_P1 >  _MAXP + 1E-8) then do;
   _MAXP = _P1;
   _IY = 2;
end;
I_class = REGDRF[_IY];
U_class = REGDRU[_IY];

*************************************;
***** end scoring code for regression;
*************************************;
