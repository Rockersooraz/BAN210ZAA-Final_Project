MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 07, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18:56:15" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                August 07, 2022
Time:                18:56:15
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O116LCIT "D:\\BAN210PA\Workspaces\EMWS1\Reg\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O116LCIT new;
MPRINT(EM_DIAGRAM):   run;
22347      filename emflow "D:\\BAN210PA\Workspaces\EMWS1\Reg\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "D:\\BAN210PA\Workspaces\EMWS1\Reg\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22348      *------------------------------------------------------------*;
22349      * Reg: Scoring DATA data;
22350      *------------------------------------------------------------*;
22351      data EMWS1.Reg_TRAIN
22352      / view=EMWS1.Reg_TRAIN
22353      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Reg_TRAIN / view=EMWS1.Reg_TRAIN ;
22354      set EMWS1.Trans_TRAIN
22355      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_TRAIN ;
22356      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file D:\\BAN210PA\Workspaces\EMWS1\Reg\EMFLOWSCORE.sas.
22357     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
22358     +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
22359     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
22360     +
22361     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
22362     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
22363     +
22364     +length I_class $ 20;
MPRINT(EM_DIAGRAM):   length I_class $ 20;
22365     +label I_class = 'Into: class' ;
MPRINT(EM_DIAGRAM):   label I_class = 'Into: class' ;
22366     +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
22367     +array REGDRF [2] $20 _temporary_ ('RECURRENCE-EVENTS' 'NO-RECURRENCE-EVENTS'
22368     +        );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $20 _temporary_ ('RECURRENCE-EVENTS' 'NO-RECURRENCE-EVENTS' );
22369     +label U_class = 'Unnormalized Into: class' ;
MPRINT(EM_DIAGRAM):   label U_class = 'Unnormalized Into: class' ;
22370     +format U_class $20.;
MPRINT(EM_DIAGRAM):   format U_class $20.;
22371     +length U_class $ 20;
MPRINT(EM_DIAGRAM):   length U_class $ 20;
22372     +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
22373     +array REGDRU[2] $ 20 _temporary_ ('recurrence-events   '
22374     +'no-recurrence-events' );
MPRINT(EM_DIAGRAM):   array REGDRU[2] $ 20 _temporary_ ('recurrence-events   ' 'no-recurrence-events' );
22375     +
22376     +*** Generate dummy variables for class ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for class ;
22377     +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
22378     +label F_class = 'From: class' ;
MPRINT(EM_DIAGRAM):   label F_class = 'From: class' ;
22379     +length F_class $ 20;
MPRINT(EM_DIAGRAM):   length F_class $ 20;
22380     +F_class = put( class , $20. );
MPRINT(EM_DIAGRAM):   F_class = put( class , $20. );
22381     +%DMNORMIP( F_class )
MPRINT(DMNORMIP):   call dmnorm(F_class,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( class ) then do;
MPRINT(EM_DIAGRAM):   _Y = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
22382     +if missing( class ) then do;
MPRINT(EM_DIAGRAM):   if F_class = 'NO-RECURRENCE-EVENTS' then do;
22383     +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = 1;
22384     +end;
MPRINT(EM_DIAGRAM):   end;
22385     +else do;
MPRINT(EM_DIAGRAM):   else if F_class = 'RECURRENCE-EVENTS' then do;
22386     +   if F_class = 'NO-RECURRENCE-EVENTS'  then do;
MPRINT(EM_DIAGRAM):   _Y = 0;
22387     +      _Y = 1;
MPRINT(EM_DIAGRAM):   end;
22388     +   end;
22389     +   else if F_class = 'RECURRENCE-EVENTS'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _Y = .;
22390     +      _Y = 0;
MPRINT(EM_DIAGRAM):   end;
22391     +   end;
MPRINT(EM_DIAGRAM):   end;
22392     +   else do;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
22393     +      _Y = .;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
22394     +   end;
22395     +end;
MPRINT(EM_DIAGRAM):   *** Check REP_deg_malig for missing values ;
22396     +
MPRINT(EM_DIAGRAM):   if missing( REP_deg_malig ) then do;
22397     +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22398     +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22399     +
MPRINT(EM_DIAGRAM):   end;
22400     +*** Check REP_deg_malig for missing values ;
22401     +if missing( REP_deg_malig ) then do;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for age ;
22402     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
22403     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
22404     +end;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
22405     +
MPRINT(EM_DIAGRAM):   _1_1 = 0;
22406     +*** Generate dummy variables for age ;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
22407     +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
22408     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( age ) then do;
22409     +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = .;
22410     +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = .;
22411     +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = .;
22412     +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = .;
22413     +if missing( age ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22414     +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22415     +   _1_1 = .;
MPRINT(EM_DIAGRAM):   end;
22416     +   _1_2 = .;
22417     +   _1_3 = .;
MPRINT(EM_DIAGRAM):   else do;
22418     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
22419     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
22420     +end;
MPRINT(EM_DIAGRAM):   _dm5 = put( age , $5. );
22421     +else do;
22422     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(DMNORMIP):   call dmnorm(_dm5,
22423     +   _dm5 = put( age , $5. );
22424     +   %DMNORMIP( _dm5 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm5 <= '50-59' then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '40-49' then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '30-39' then do;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
22425     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22426     +   if _dm5 <= '50-59'  then do;
MPRINT(EM_DIAGRAM):   end;
22427     +      if _dm5 <= '40-49'  then do;
22428     +         if _dm5 = '30-39'  then do;
MPRINT(EM_DIAGRAM):   else do;
22429     +            _1_0 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '40-49' then do;
22430     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
22431     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22432     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22433     +            if _dm5 = '40-49'  then do;
MPRINT(EM_DIAGRAM):   end;
22434     +               _1_1 = 1;
22435     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22436     +            end;
MPRINT(EM_DIAGRAM):   if _dm5 = '50-59' then do;
22437     +         end;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
22438     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22439     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22440     +         if _dm5 = '50-59'  then do;
MPRINT(EM_DIAGRAM):   end;
22441     +            _1_2 = 1;
22442     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22443     +         end;
MPRINT(EM_DIAGRAM):   if _dm5 = '60-69' then do;
22444     +      end;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
22445     +   end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22446     +   else do;
MPRINT(EM_DIAGRAM):   end;
22447     +      if _dm5 = '60-69'  then do;
MPRINT(EM_DIAGRAM):   else do;
22448     +         _1_3 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '70-79' then do;
22449     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
22450     +      end;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
22451     +      else do;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
22452     +         if _dm5 = '70-79'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22453     +            _1_0 = -1;
MPRINT(EM_DIAGRAM):   end;
22454     +            _1_1 = -1;
MPRINT(EM_DIAGRAM):   end;
22455     +            _1_2 = -1;
MPRINT(EM_DIAGRAM):   end;
22456     +            _1_3 = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
22457     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _1_0 = .;
22458     +         end;
MPRINT(EM_DIAGRAM):   _1_1 = .;
22459     +      end;
MPRINT(EM_DIAGRAM):   _1_2 = .;
22460     +   end;
MPRINT(EM_DIAGRAM):   _1_3 = .;
22461     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22462     +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22463     +      _1_1 = .;
MPRINT(EM_DIAGRAM):   end;
22464     +      _1_2 = .;
MPRINT(EM_DIAGRAM):   end;
22465     +      _1_3 = .;
22466     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for breast ;
22467     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
22468     +   end;
MPRINT(EM_DIAGRAM):   if missing( breast ) then do;
22469     +end;
MPRINT(EM_DIAGRAM):   _2_0 = .;
22470     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22471     +*** Generate dummy variables for breast ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22472     +drop _2_0 ;
MPRINT(EM_DIAGRAM):   end;
22473     +if missing( breast ) then do;
22474     +   _2_0 = .;
MPRINT(EM_DIAGRAM):   else do;
22475     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
22476     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
22477     +end;
MPRINT(EM_DIAGRAM):   _dm5 = put( breast , $5. );
22478     +else do;
22479     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(DMNORMIP):   call dmnorm(_dm5,
22480     +   _dm5 = put( breast , $5. );
22481     +   %DMNORMIP( _dm5 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm5 = 'LEFT' then do;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'RIGHT' then do;
22482     +   if _dm5 = 'LEFT'  then do;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
22483     +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   end;
22484     +   end;
22485     +   else if _dm5 = 'RIGHT'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
22486     +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22487     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22488     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22489     +      _2_0 = .;
22490     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for breast_quad ;
22491     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 _3_3 _3_4 ;
22492     +   end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
22493     +end;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
22494     +
MPRINT(EM_DIAGRAM):   _3_1 = 0;
22495     +*** Generate dummy variables for breast_quad ;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
22496     +drop _3_0 _3_1 _3_2 _3_3 _3_4 ;
MPRINT(EM_DIAGRAM):   _3_3 = 0;
22497     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _3_4 = 0;
22498     +_3_0 = 0;
MPRINT(EM_DIAGRAM):   if missing( breast_quad ) then do;
22499     +_3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = .;
22500     +_3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = .;
22501     +_3_3 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = .;
22502     +_3_4 = 0;
MPRINT(EM_DIAGRAM):   _3_3 = .;
22503     +if missing( breast_quad ) then do;
MPRINT(EM_DIAGRAM):   _3_4 = .;
22504     +   _3_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22505     +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22506     +   _3_2 = .;
MPRINT(EM_DIAGRAM):   end;
22507     +   _3_3 = .;
22508     +   _3_4 = .;
MPRINT(EM_DIAGRAM):   else do;
22509     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm9 $ 9;
22510     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm9 ;
22511     +end;
22512     +else do;
22513     +   length _dm9 $ 9; drop _dm9 ;
22514     +   %DMNORMCP( breast_quad , _dm9 )
MPRINT(DMNORMCP):   _dm9=dmnorm(breast_quad,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm9 = 'LEFT_LOW' then do;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'LEFT_UP' then do;
22515     +   if _dm9 = 'LEFT_LOW'  then do;
MPRINT(EM_DIAGRAM):   _3_3 = 1;
22516     +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   end;
22517     +   end;
22518     +   else if _dm9 = 'LEFT_UP'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'RIGHT_UP' then do;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
22519     +      _3_3 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
22520     +   end;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
22521     +   else if _dm9 = 'RIGHT_UP'  then do;
MPRINT(EM_DIAGRAM):   _3_3 = -1;
MPRINT(EM_DIAGRAM):   _3_4 = -1;
22522     +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   end;
22523     +      _3_1 = -1;
22524     +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'CENTRAL' then do;
22525     +      _3_3 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
22526     +      _3_4 = -1;
MPRINT(EM_DIAGRAM):   end;
22527     +   end;
22528     +   else if _dm9 = 'CENTRAL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'RIGHT_LOW' then do;
MPRINT(EM_DIAGRAM):   _3_4 = 1;
22529     +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   end;
22530     +   end;
22531     +   else if _dm9 = 'RIGHT_LOW'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = '?' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
22532     +      _3_4 = 1;
MPRINT(EM_DIAGRAM):   end;
22533     +   end;
22534     +   else if _dm9 = '?'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
22535     +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = .;
22536     +   end;
MPRINT(EM_DIAGRAM):   _3_2 = .;
22537     +   else do;
MPRINT(EM_DIAGRAM):   _3_3 = .;
MPRINT(EM_DIAGRAM):   _3_4 = .;
22538     +      _3_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22539     +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22540     +      _3_2 = .;
MPRINT(EM_DIAGRAM):   end;
22541     +      _3_3 = .;
MPRINT(EM_DIAGRAM):   end;
22542     +      _3_4 = .;
22543     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for inv_nodes ;
22544     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _4_0 _4_1 _4_2 _4_3 _4_4 ;
22545     +   end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
22546     +end;
MPRINT(EM_DIAGRAM):   _4_0 = 0;
22547     +
MPRINT(EM_DIAGRAM):   _4_1 = 0;
22548     +*** Generate dummy variables for inv_nodes ;
MPRINT(EM_DIAGRAM):   _4_2 = 0;
22549     +drop _4_0 _4_1 _4_2 _4_3 _4_4 ;
MPRINT(EM_DIAGRAM):   _4_3 = 0;
22550     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _4_4 = 0;
22551     +_4_0 = 0;
MPRINT(EM_DIAGRAM):   if missing( inv_nodes ) then do;
22552     +_4_1 = 0;
MPRINT(EM_DIAGRAM):   _4_0 = .;
22553     +_4_2 = 0;
MPRINT(EM_DIAGRAM):   _4_1 = .;
22554     +_4_3 = 0;
MPRINT(EM_DIAGRAM):   _4_2 = .;
22555     +_4_4 = 0;
MPRINT(EM_DIAGRAM):   _4_3 = .;
22556     +if missing( inv_nodes ) then do;
MPRINT(EM_DIAGRAM):   _4_4 = .;
22557     +   _4_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22558     +   _4_1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22559     +   _4_2 = .;
MPRINT(EM_DIAGRAM):   end;
22560     +   _4_3 = .;
22561     +   _4_4 = .;
MPRINT(EM_DIAGRAM):   else do;
22562     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
22563     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
22564     +end;
MPRINT(EM_DIAGRAM):   _dm5 = put( inv_nodes , $5. );
22565     +else do;
22566     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(DMNORMIP):   call dmnorm(_dm5,
22567     +   _dm5 = put( inv_nodes , $5. );
22568     +   %DMNORMIP( _dm5 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm5 = '0-2' then do;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm5 = '44625' then do;
22569     +   if _dm5 = '0-2'  then do;
MPRINT(EM_DIAGRAM):   _4_3 = 1;
22570     +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   end;
22571     +   end;
22572     +   else if _dm5 = '44625'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '15-17' then do;
MPRINT(EM_DIAGRAM):   _4_1 = 1;
22573     +      _4_3 = 1;
MPRINT(EM_DIAGRAM):   end;
22574     +   end;
22575     +   else if _dm5 = '15-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '44815' then do;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
22576     +      _4_1 = 1;
MPRINT(EM_DIAGRAM):   _4_1 = -1;
22577     +   end;
MPRINT(EM_DIAGRAM):   _4_2 = -1;
22578     +   else if _dm5 = '44815'  then do;
MPRINT(EM_DIAGRAM):   _4_3 = -1;
MPRINT(EM_DIAGRAM):   _4_4 = -1;
22579     +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   end;
22580     +      _4_1 = -1;
22581     +      _4_2 = -1;
MPRINT(EM_DIAGRAM):   else if _dm5 = '44720' then do;
22582     +      _4_3 = -1;
MPRINT(EM_DIAGRAM):   _4_4 = 1;
22583     +      _4_4 = -1;
MPRINT(EM_DIAGRAM):   end;
22584     +   end;
22585     +   else if _dm5 = '44720'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '24-26' then do;
MPRINT(EM_DIAGRAM):   _4_2 = 1;
22586     +      _4_4 = 1;
MPRINT(EM_DIAGRAM):   end;
22587     +   end;
22588     +   else if _dm5 = '24-26'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _4_0 = .;
22589     +      _4_2 = 1;
MPRINT(EM_DIAGRAM):   _4_1 = .;
22590     +   end;
MPRINT(EM_DIAGRAM):   _4_2 = .;
22591     +   else do;
MPRINT(EM_DIAGRAM):   _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
22592     +      _4_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22593     +      _4_1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22594     +      _4_2 = .;
MPRINT(EM_DIAGRAM):   end;
22595     +      _4_3 = .;
MPRINT(EM_DIAGRAM):   end;
22596     +      _4_4 = .;
22597     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for irradiat ;
22598     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
22599     +   end;
MPRINT(EM_DIAGRAM):   if missing( irradiat ) then do;
22600     +end;
MPRINT(EM_DIAGRAM):   _5_0 = .;
22601     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22602     +*** Generate dummy variables for irradiat ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22603     +drop _5_0 ;
MPRINT(EM_DIAGRAM):   end;
22604     +if missing( irradiat ) then do;
22605     +   _5_0 = .;
MPRINT(EM_DIAGRAM):   else do;
22606     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
22607     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
22608     +end;
MPRINT(EM_DIAGRAM):   _dm3 = put( irradiat , $3. );
22609     +else do;
22610     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(DMNORMIP):   call dmnorm(_dm3,
22611     +   _dm3 = put( irradiat , $3. );
22612     +   %DMNORMIP( _dm3 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm3 = 'NO' then do;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'YES' then do;
22613     +   if _dm3 = 'NO'  then do;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
22614     +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   end;
22615     +   end;
22616     +   else if _dm3 = 'YES'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _5_0 = .;
22617     +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22618     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22619     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22620     +      _5_0 = .;
22621     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for menopause ;
22622     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _6_0 _6_1 ;
22623     +   end;
MPRINT(EM_DIAGRAM):   if missing( menopause ) then do;
22624     +end;
MPRINT(EM_DIAGRAM):   _6_0 = .;
22625     +
MPRINT(EM_DIAGRAM):   _6_1 = .;
22626     +*** Generate dummy variables for menopause ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22627     +drop _6_0 _6_1 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22628     +if missing( menopause ) then do;
MPRINT(EM_DIAGRAM):   end;
22629     +   _6_0 = .;
22630     +   _6_1 = .;
MPRINT(EM_DIAGRAM):   else do;
22631     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm7 $ 7;
22632     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm7 ;
22633     +end;
MPRINT(EM_DIAGRAM):   _dm7 = put( menopause , $7. );
22634     +else do;
22635     +   length _dm7 $ 7; drop _dm7 ;
MPRINT(DMNORMIP):   call dmnorm(_dm7,
22636     +   _dm7 = put( menopause , $7. );
22637     +   %DMNORMIP( _dm7 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm7 = 'PREMENO' then do;
MPRINT(EM_DIAGRAM):   _6_0 = -1;
MPRINT(EM_DIAGRAM):   _6_1 = -1;
MPRINT(EM_DIAGRAM):   end;
22638     +   if _dm7 = 'PREMENO'  then do;
MPRINT(EM_DIAGRAM):   else if _dm7 = 'GE40' then do;
22639     +      _6_0 = -1;
MPRINT(EM_DIAGRAM):   _6_0 = 1;
22640     +      _6_1 = -1;
MPRINT(EM_DIAGRAM):   _6_1 = 0;
22641     +   end;
MPRINT(EM_DIAGRAM):   end;
22642     +   else if _dm7 = 'GE40'  then do;
MPRINT(EM_DIAGRAM):   else if _dm7 = 'LT40' then do;
22643     +      _6_0 = 1;
MPRINT(EM_DIAGRAM):   _6_0 = 0;
22644     +      _6_1 = 0;
MPRINT(EM_DIAGRAM):   _6_1 = 1;
22645     +   end;
MPRINT(EM_DIAGRAM):   end;
22646     +   else if _dm7 = 'LT40'  then do;
MPRINT(EM_DIAGRAM):   else do;
22647     +      _6_0 = 0;
MPRINT(EM_DIAGRAM):   _6_0 = .;
22648     +      _6_1 = 1;
MPRINT(EM_DIAGRAM):   _6_1 = .;
22649     +   end;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22650     +   else do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
22651     +      _6_0 = .;
MPRINT(EM_DIAGRAM):   end;
22652     +      _6_1 = .;
22653     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for node_caps ;
22654     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 ;
22655     +   end;
MPRINT(EM_DIAGRAM):   if missing( node_caps ) then do;
22656     +end;
MPRINT(EM_DIAGRAM):   _7_0 = .;
22657     +
MPRINT(EM_DIAGRAM):   _7_1 = .;
22658     +*** Generate dummy variables for node_caps ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22659     +drop _7_0 _7_1 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22660     +if missing( node_caps ) then do;
MPRINT(EM_DIAGRAM):   end;
22661     +   _7_0 = .;
22662     +   _7_1 = .;
MPRINT(EM_DIAGRAM):   else do;
22663     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
22664     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
22665     +end;
22666     +else do;
22667     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(DMNORMCP):   _dm3=dmnorm(node_caps,
22668     +   %DMNORMCP( node_caps , _dm3 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm3 = 'NO' then do;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
MPRINT(EM_DIAGRAM):   end;
22669     +   if _dm3 = 'NO'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'YES' then do;
22670     +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
22671     +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
22672     +   end;
MPRINT(EM_DIAGRAM):   end;
22673     +   else if _dm3 = 'YES'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = '?' then do;
22674     +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
22675     +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
22676     +   end;
MPRINT(EM_DIAGRAM):   end;
22677     +   else if _dm3 = '?'  then do;
MPRINT(EM_DIAGRAM):   else do;
22678     +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = .;
22679     +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = .;
22680     +   end;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22681     +   else do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
22682     +      _7_0 = .;
MPRINT(EM_DIAGRAM):   end;
22683     +      _7_1 = .;
22684     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for tumor_size ;
22685     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 _8_4 _8_5 _8_6 _8_7 _8_8 _8_9 ;
22686     +   end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
22687     +end;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
22688     +
MPRINT(EM_DIAGRAM):   _8_1 = 0;
22689     +*** Generate dummy variables for tumor_size ;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
22690     +drop _8_0 _8_1 _8_2 _8_3 _8_4 _8_5 _8_6 _8_7 _8_8 _8_9 ;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
22691     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _8_4 = 0;
22692     +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_5 = 0;
22693     +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_6 = 0;
22694     +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_7 = 0;
22695     +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_8 = 0;
22696     +_8_4 = 0;
MPRINT(EM_DIAGRAM):   _8_9 = 0;
22697     +_8_5 = 0;
MPRINT(EM_DIAGRAM):   if missing( tumor_size ) then do;
22698     +_8_6 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = .;
22699     +_8_7 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = .;
22700     +_8_8 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = .;
22701     +_8_9 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = .;
22702     +if missing( tumor_size ) then do;
MPRINT(EM_DIAGRAM):   _8_4 = .;
22703     +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_5 = .;
22704     +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_6 = .;
22705     +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_7 = .;
22706     +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_8 = .;
22707     +   _8_4 = .;
MPRINT(EM_DIAGRAM):   _8_9 = .;
22708     +   _8_5 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22709     +   _8_6 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22710     +   _8_7 = .;
MPRINT(EM_DIAGRAM):   end;
22711     +   _8_8 = .;
22712     +   _8_9 = .;
MPRINT(EM_DIAGRAM):   else do;
22713     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
22714     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
22715     +end;
22716     +else do;
22717     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(DMNORMCP):   _dm5=dmnorm(tumor_size,
22718     +   %DMNORMCP( tumor_size , _dm5 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm5 <= '35-39' then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '20-24' then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '15-19' then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '0-4' then do;
22719     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
22720     +   if _dm5 <= '35-39'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22721     +      if _dm5 <= '20-24'  then do;
MPRINT(EM_DIAGRAM):   end;
22722     +         if _dm5 <= '15-19'  then do;
22723     +            if _dm5 = '0-4'  then do;
MPRINT(EM_DIAGRAM):   else do;
22724     +               _8_0 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '15-19' then do;
22725     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
22726     +            end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22727     +            else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22728     +               if _dm5 = '15-19'  then do;
MPRINT(EM_DIAGRAM):   end;
22729     +                  _8_1 = 1;
22730     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22731     +               end;
MPRINT(EM_DIAGRAM):   if _dm5 = '20-24' then do;
22732     +            end;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
22733     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22734     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22735     +            if _dm5 = '20-24'  then do;
MPRINT(EM_DIAGRAM):   end;
22736     +               _8_2 = 1;
22737     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22738     +            end;
MPRINT(EM_DIAGRAM):   if _dm5 <= '30-34' then do;
22739     +         end;
MPRINT(EM_DIAGRAM):   if _dm5 = '25-29' then do;
22740     +      end;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
22741     +      else do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
22742     +         if _dm5 <= '30-34'  then do;
22743     +            if _dm5 = '25-29'  then do;
MPRINT(EM_DIAGRAM):   else do;
22744     +               _8_3 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '30-34' then do;
22745     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _8_4 = 1;
22746     +            end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22747     +            else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22748     +               if _dm5 = '30-34'  then do;
MPRINT(EM_DIAGRAM):   end;
22749     +                  _8_4 = 1;
22750     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22751     +               end;
MPRINT(EM_DIAGRAM):   if _dm5 = '35-39' then do;
22752     +            end;
MPRINT(EM_DIAGRAM):   _8_5 = 1;
22753     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22754     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22755     +            if _dm5 = '35-39'  then do;
MPRINT(EM_DIAGRAM):   end;
22756     +               _8_5 = 1;
MPRINT(EM_DIAGRAM):   end;
22757     +               _dm_find = 1;
22758     +            end;
MPRINT(EM_DIAGRAM):   else do;
22759     +         end;
MPRINT(EM_DIAGRAM):   if _dm5 <= '44848' then do;
22760     +      end;
MPRINT(EM_DIAGRAM):   if _dm5 <= '44690' then do;
22761     +   end;
MPRINT(EM_DIAGRAM):   if _dm5 = '40-44' then do;
22762     +   else do;
MPRINT(EM_DIAGRAM):   _8_6 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22763     +      if _dm5 <= '44848'  then do;
MPRINT(EM_DIAGRAM):   end;
22764     +         if _dm5 <= '44690'  then do;
22765     +            if _dm5 = '40-44'  then do;
MPRINT(EM_DIAGRAM):   else do;
22766     +               _8_6 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '44690' then do;
22767     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _8_7 = 1;
22768     +            end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22769     +            else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22770     +               if _dm5 = '44690'  then do;
MPRINT(EM_DIAGRAM):   end;
22771     +                  _8_7 = 1;
22772     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22773     +               end;
MPRINT(EM_DIAGRAM):   if _dm5 = '44848' then do;
22774     +            end;
MPRINT(EM_DIAGRAM):   _8_8 = 1;
22775     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22776     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22777     +            if _dm5 = '44848'  then do;
MPRINT(EM_DIAGRAM):   end;
22778     +               _8_8 = 1;
22779     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22780     +            end;
MPRINT(EM_DIAGRAM):   if _dm5 = '45-49' then do;
22781     +         end;
MPRINT(EM_DIAGRAM):   _8_9 = 1;
22782     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22783     +      else do;
MPRINT(EM_DIAGRAM):   end;
22784     +         if _dm5 = '45-49'  then do;
MPRINT(EM_DIAGRAM):   else do;
22785     +            _8_9 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '50-54' then do;
22786     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
22787     +         end;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
22788     +         else do;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
22789     +            if _dm5 = '50-54'  then do;
MPRINT(EM_DIAGRAM):   _8_4 = -1;
22790     +               _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_5 = -1;
22791     +               _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_6 = -1;
22792     +               _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_7 = -1;
22793     +               _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_8 = -1;
22794     +               _8_4 = -1;
MPRINT(EM_DIAGRAM):   _8_9 = -1;
22795     +               _8_5 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22796     +               _8_6 = -1;
MPRINT(EM_DIAGRAM):   end;
22797     +               _8_7 = -1;
MPRINT(EM_DIAGRAM):   end;
22798     +               _8_8 = -1;
MPRINT(EM_DIAGRAM):   end;
22799     +               _8_9 = -1;
MPRINT(EM_DIAGRAM):   end;
22800     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
22801     +            end;
MPRINT(EM_DIAGRAM):   _8_0 = .;
22802     +         end;
MPRINT(EM_DIAGRAM):   _8_1 = .;
22803     +      end;
MPRINT(EM_DIAGRAM):   _8_2 = .;
22804     +   end;
MPRINT(EM_DIAGRAM):   _8_3 = .;
22805     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   _8_4 = .;
22806     +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_5 = .;
22807     +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_6 = .;
22808     +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_7 = .;
22809     +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_8 = .;
22810     +      _8_4 = .;
MPRINT(EM_DIAGRAM):   _8_9 = .;
22811     +      _8_5 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22812     +      _8_6 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22813     +      _8_7 = .;
MPRINT(EM_DIAGRAM):   end;
22814     +      _8_8 = .;
MPRINT(EM_DIAGRAM):   end;
22815     +      _8_9 = .;
22816     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
22817     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
22818     +   end;
MPRINT(EM_DIAGRAM):   _P0 = 0.2920353982;
22819     +end;
MPRINT(EM_DIAGRAM):   _P1 = 0.7079646018;
22820     +
MPRINT(EM_DIAGRAM):   goto REGDR1;
22821     +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   end;
22822     +if _DM_BAD > 0 then do;
22823     +   _P0 = 0.2920353982;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
22824     +   _P1 = 0.7079646018;
MPRINT(EM_DIAGRAM):   drop _TEMP;
22825     +   goto REGDR1;
MPRINT(EM_DIAGRAM):   drop _LP0 ;
22826     +end;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
22827     +
22828     +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Effect: REP_deg_malig ;
22829     +drop _TEMP;
MPRINT(EM_DIAGRAM):   _TEMP = REP_deg_malig ;
22830     +drop _LP0 ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74188815265941 * _TEMP);
22831     +_LP0 = 0;
22832     +
MPRINT(EM_DIAGRAM):   *** Effect: age ;
22833     +***  Effect: REP_deg_malig ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
22834     +_TEMP = REP_deg_malig ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.2711526472824) * _TEMP * _1_0;
22835     +_LP0 = _LP0 + (    0.74188815265941 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.51118587377913) * _TEMP * _1_1;
22836     +
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.77015584013962) * _TEMP * _1_2;
22837     +***  Effect: age ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.24429045271765) * _TEMP * _1_3;
22838     +_TEMP = 1;
22839     +_LP0 = _LP0 + (     1.2711526472824) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   *** Effect: breast ;
22840     +_LP0 = _LP0 + (    3.51118587377913) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
22841     +_LP0 = _LP0 + (    1.77015584013962) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.55362156774278) * _TEMP * _2_0;
22842     +_LP0 = _LP0 + (    3.24429045271765) * _TEMP * _1_3;
22843     +
MPRINT(EM_DIAGRAM):   *** Effect: breast_quad ;
22844     +***  Effect: breast ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
22845     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 13.7360898428639) * _TEMP * _3_0;
22846     +_LP0 = _LP0 + (   -0.55362156774278) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.34657631410209) * _TEMP * _3_1;
22847     +
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.87020658947285) * _TEMP * _3_2;
22848     +***  Effect: breast_quad ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.60528108373917) * _TEMP * _3_3;
22849     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.02455025813794) * _TEMP * _3_4;
22850     +_LP0 = _LP0 + (    13.7360898428639) * _TEMP * _3_0;
22851     +_LP0 = _LP0 + (   -1.34657631410209) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   *** Effect: inv_nodes ;
22852     +_LP0 = _LP0 + (   -2.87020658947285) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
22853     +_LP0 = _LP0 + (   -3.60528108373917) * _TEMP * _3_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.92999632834698) * _TEMP * _4_0;
22854     +_LP0 = _LP0 + (   -2.02455025813794) * _TEMP * _3_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.85577896916898) * _TEMP * _4_1;
22855     +
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 11.4860062818446) * _TEMP * _4_2;
22856     +***  Effect: inv_nodes ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.40138030631945) * _TEMP * _4_3;
22857     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.69160020226667) * _TEMP * _4_4;
22858     +_LP0 = _LP0 + (   -3.92999632834698) * _TEMP * _4_0;
22859     +_LP0 = _LP0 + (   -1.85577896916898) * _TEMP * _4_1;
MPRINT(EM_DIAGRAM):   *** Effect: irradiat ;
22860     +_LP0 = _LP0 + (    11.4860062818446) * _TEMP * _4_2;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
22861     +_LP0 = _LP0 + (   -2.40138030631945) * _TEMP * _4_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05106811531383) * _TEMP * _5_0;
22862     +_LP0 = _LP0 + (   -1.69160020226667) * _TEMP * _4_4;
22863     +
MPRINT(EM_DIAGRAM):   *** Effect: menopause ;
22864     +***  Effect: irradiat ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
22865     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.68241923615777) * _TEMP * _6_0;
22866     +_LP0 = _LP0 + (    0.05106811531383) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -8.03309066307678) * _TEMP * _6_1;
22867     +
22868     +***  Effect: menopause ;
MPRINT(EM_DIAGRAM):   *** Effect: node_caps ;
22869     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
22870     +_LP0 = _LP0 + (    3.68241923615777) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -9.61607022474882) * _TEMP * _7_0;
22871     +_LP0 = _LP0 + (   -8.03309066307678) * _TEMP * _6_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.8963217947722) * _TEMP * _7_1;
22872     +
22873     +***  Effect: node_caps ;
MPRINT(EM_DIAGRAM):   *** Effect: tumor_size ;
22874     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
22875     +_LP0 = _LP0 + (   -9.61607022474882) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -10.0604143863662) * _TEMP * _8_0;
22876     +_LP0 = _LP0 + (     4.8963217947722) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.6393813293927) * _TEMP * _8_1;
22877     +
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.07127301211026) * _TEMP * _8_2;
22878     +***  Effect: tumor_size ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.06886354257634) * _TEMP * _8_3;
22879     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.07640420879079) * _TEMP * _8_4;
22880     +_LP0 = _LP0 + (   -10.0604143863662) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.66865920399611) * _TEMP * _8_5;
22881     +_LP0 = _LP0 + (     4.6393813293927) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.25094886049268) * _TEMP * _8_6;
22882     +_LP0 = _LP0 + (    5.07127301211026) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -8.25096914859845) * _TEMP * _8_7;
22883     +_LP0 = _LP0 + (    5.06886354257634) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -7.96985669817867) * _TEMP * _8_8;
22884     +_LP0 = _LP0 + (    5.07640420879079) * _TEMP * _8_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -8.99285729799633) * _TEMP * _8_9;
22885     +_LP0 = _LP0 + (    3.66865920399611) * _TEMP * _8_5;
22886     +_LP0 = _LP0 + (    5.25094886049268) * _TEMP * _8_6;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
22887     +_LP0 = _LP0 + (   -8.25096914859845) * _TEMP * _8_7;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
22888     +_LP0 = _LP0 + (   -7.96985669817867) * _TEMP * _8_8;
MPRINT(EM_DIAGRAM):   drop _LPMAX;
22889     +_LP0 = _LP0 + (   -8.99285729799633) * _TEMP * _8_9;
MPRINT(EM_DIAGRAM):   _LPMAX= 0;
22890     +
MPRINT(EM_DIAGRAM):   _LP0 = -12.2948238272586 + _LP0;
22891     +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   if _LPMAX < _LP0 then _LPMAX = _LP0;
22892     +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   _LP0 = exp(_LP0 - _LPMAX);
22893     +drop _LPMAX;
MPRINT(EM_DIAGRAM):   _LPMAX = exp(-_LPMAX);
22894     +_LPMAX= 0;
MPRINT(EM_DIAGRAM):   _P1 = 1 / (_LPMAX + _LP0);
22895     +_LP0 =    -12.2948238272586 + _LP0;
MPRINT(EM_DIAGRAM):   _P0 = _LP0 * _P1;
22896     +if _LPMAX < _LP0 then _LPMAX = _LP0;
MPRINT(EM_DIAGRAM):   _P1 = _LPMAX * _P1;
22897     +_LP0 = exp(_LP0 - _LPMAX);
22898     +_LPMAX = exp(-_LPMAX);
22899     +_P1 = 1 / (_LPMAX + _LP0);
22900     +_P0 = _LP0 * _P1;
22901     +_P1 = _LPMAX * _P1;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
22902     +
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
22903     +REGDR1:
MPRINT(EM_DIAGRAM):   R_classrecurrence_events = .;
MPRINT(EM_DIAGRAM):   R_classno_recurrence_events = .;
22904     +
MPRINT(EM_DIAGRAM):   end;
22905     +*** Residuals;
22906     +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   else do;
22907     +   R_classrecurrence_events = .;
MPRINT(EM_DIAGRAM):   label R_classrecurrence_events = 'Residual: class=recurrence-events' ;
22908     +   R_classno_recurrence_events = .;
22909     +end;
22910     +else do;
MPRINT(EM_DIAGRAM):   label R_classno_recurrence_events = 'Residual: class=no-recurrence-events' ;
22911     +    label R_classrecurrence_events = 'Residual: class=recurrence-events' ;
MPRINT(EM_DIAGRAM):   R_classrecurrence_events = - _P0;
MPRINT(EM_DIAGRAM):   R_classno_recurrence_events = - _P1;
22912     +    label R_classno_recurrence_events =
MPRINT(EM_DIAGRAM):   select( _Y );
22913     +'Residual: class=no-recurrence-events' ;
MPRINT(EM_DIAGRAM):   when (0) R_classrecurrence_events = R_classrecurrence_events + 1;
MPRINT(EM_DIAGRAM):   when (1) R_classno_recurrence_events = R_classno_recurrence_events + 1;
22914     +   R_classrecurrence_events = - _P0;
MPRINT(EM_DIAGRAM):   end;
22915     +   R_classno_recurrence_events = - _P1;
MPRINT(EM_DIAGRAM):   end;
22916     +   select( _Y );
22917     +      when (0)  R_classrecurrence_events = R_classrecurrence_events + 1;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
22918     +      when (1)  R_classno_recurrence_events = R_classno_recurrence_events + 1;
MPRINT(EM_DIAGRAM):   label P_classrecurrence_events = 'Predicted: class=recurrence-events' ;
22919     +   end;
22920     +end;
MPRINT(EM_DIAGRAM):   label P_classno_recurrence_events = 'Predicted: class=no-recurrence-events' ;
22921     +
22922     +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = _P0;
22923     +label P_classrecurrence_events = 'Predicted: class=recurrence-events' ;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
MPRINT(EM_DIAGRAM):   _IY = 1;
22924     +label P_classno_recurrence_events = 'Predicted: class=no-recurrence-events' ;
MPRINT(EM_DIAGRAM):   P_classno_recurrence_events = _P1;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
22925     +P_classrecurrence_events = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
22926     +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _IY = 2;
22927     +_IY = 1;
MPRINT(EM_DIAGRAM):   end;
22928     +P_classno_recurrence_events = _P1;
MPRINT(EM_DIAGRAM):   I_class = REGDRF[_IY];
22929     +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   U_class = REGDRU[_IY];
22930     +   _MAXP = _P1;
22931     +   _IY = 2;
MPRINT(EM_DIAGRAM):   *************************************;
22932     +end;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
22933     +I_class = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   *************************************;
22934     +U_class = REGDRU[_IY];
22935     +
22936     +*************************************;
22937     +***** end scoring code for regression;
22938     +*************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
22939      run;

NOTE: DATA STEP view saved on file EMWS1.REG_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
22940      quit;
22941      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
22942      filename emflow "D:\\BAN210PA\Workspaces\EMWS1\Reg\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "D:\\BAN210PA\Workspaces\EMWS1\Reg\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22943      *------------------------------------------------------------*;
22944      * Reg: Scoring VALIDATE data;
22945      *------------------------------------------------------------*;
22946      data EMWS1.Reg_VALIDATE
22947      / view=EMWS1.Reg_VALIDATE
22948      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Reg_VALIDATE / view=EMWS1.Reg_VALIDATE ;
22949      set EMWS1.Trans_VALIDATE
22950      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_VALIDATE ;
22951      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file D:\\BAN210PA\Workspaces\EMWS1\Reg\EMFLOWSCORE.sas.
22952     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
22953     +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
22954     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
22955     +
22956     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
22957     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
22958     +
22959     +length I_class $ 20;
MPRINT(EM_DIAGRAM):   length I_class $ 20;
22960     +label I_class = 'Into: class' ;
MPRINT(EM_DIAGRAM):   label I_class = 'Into: class' ;
22961     +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
22962     +array REGDRF [2] $20 _temporary_ ('RECURRENCE-EVENTS' 'NO-RECURRENCE-EVENTS'
22963     +        );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $20 _temporary_ ('RECURRENCE-EVENTS' 'NO-RECURRENCE-EVENTS' );
22964     +label U_class = 'Unnormalized Into: class' ;
MPRINT(EM_DIAGRAM):   label U_class = 'Unnormalized Into: class' ;
22965     +format U_class $20.;
MPRINT(EM_DIAGRAM):   format U_class $20.;
22966     +length U_class $ 20;
MPRINT(EM_DIAGRAM):   length U_class $ 20;
22967     +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
22968     +array REGDRU[2] $ 20 _temporary_ ('recurrence-events   '
22969     +'no-recurrence-events' );
MPRINT(EM_DIAGRAM):   array REGDRU[2] $ 20 _temporary_ ('recurrence-events   ' 'no-recurrence-events' );
22970     +
22971     +*** Generate dummy variables for class ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for class ;
22972     +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
22973     +label F_class = 'From: class' ;
MPRINT(EM_DIAGRAM):   label F_class = 'From: class' ;
22974     +length F_class $ 20;
MPRINT(EM_DIAGRAM):   length F_class $ 20;
22975     +F_class = put( class , $20. );
MPRINT(EM_DIAGRAM):   F_class = put( class , $20. );
22976     +%DMNORMIP( F_class )
MPRINT(DMNORMIP):   call dmnorm(F_class,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
22977     +if missing( class ) then do;
MPRINT(EM_DIAGRAM):   if missing( class ) then do;
22978     +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
22979     +end;
MPRINT(EM_DIAGRAM):   end;
22980     +else do;
MPRINT(EM_DIAGRAM):   else do;
22981     +   if F_class = 'NO-RECURRENCE-EVENTS'  then do;
MPRINT(EM_DIAGRAM):   if F_class = 'NO-RECURRENCE-EVENTS' then do;
22982     +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
22983     +   end;
MPRINT(EM_DIAGRAM):   end;
22984     +   else if F_class = 'RECURRENCE-EVENTS'  then do;
MPRINT(EM_DIAGRAM):   else if F_class = 'RECURRENCE-EVENTS' then do;
22985     +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
22986     +   end;
MPRINT(EM_DIAGRAM):   end;
22987     +   else do;
MPRINT(EM_DIAGRAM):   else do;
22988     +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
22989     +   end;
MPRINT(EM_DIAGRAM):   end;
22990     +end;
MPRINT(EM_DIAGRAM):   end;
22991     +
22992     +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
22993     +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
22994     +
22995     +*** Check REP_deg_malig for missing values ;
MPRINT(EM_DIAGRAM):   *** Check REP_deg_malig for missing values ;
22996     +if missing( REP_deg_malig ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_deg_malig ) then do;
22997     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22998     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22999     +end;
MPRINT(EM_DIAGRAM):   end;
23000     +
23001     +*** Generate dummy variables for age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for age ;
23002     +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
23003     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
23004     +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
23005     +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
23006     +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
23007     +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
23008     +if missing( age ) then do;
MPRINT(EM_DIAGRAM):   if missing( age ) then do;
23009     +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
23010     +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
23011     +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
23012     +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
23013     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23014     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23015     +end;
MPRINT(EM_DIAGRAM):   end;
23016     +else do;
MPRINT(EM_DIAGRAM):   else do;
23017     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
23018     +   _dm5 = put( age , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( age , $5. );
23019     +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23020     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
23021     +   if _dm5 <= '50-59'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '50-59' then do;
23022     +      if _dm5 <= '40-49'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '40-49' then do;
23023     +         if _dm5 = '30-39'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '30-39' then do;
23024     +            _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
23025     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23026     +         end;
MPRINT(EM_DIAGRAM):   end;
23027     +         else do;
MPRINT(EM_DIAGRAM):   else do;
23028     +            if _dm5 = '40-49'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '40-49' then do;
23029     +               _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
23030     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23031     +            end;
MPRINT(EM_DIAGRAM):   end;
23032     +         end;
MPRINT(EM_DIAGRAM):   end;
23033     +      end;
MPRINT(EM_DIAGRAM):   end;
23034     +      else do;
MPRINT(EM_DIAGRAM):   else do;
23035     +         if _dm5 = '50-59'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '50-59' then do;
23036     +            _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
23037     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23038     +         end;
MPRINT(EM_DIAGRAM):   end;
23039     +      end;
MPRINT(EM_DIAGRAM):   end;
23040     +   end;
MPRINT(EM_DIAGRAM):   end;
23041     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23042     +      if _dm5 = '60-69'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '60-69' then do;
23043     +         _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
23044     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23045     +      end;
MPRINT(EM_DIAGRAM):   end;
23046     +      else do;
MPRINT(EM_DIAGRAM):   else do;
23047     +         if _dm5 = '70-79'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '70-79' then do;
23048     +            _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
23049     +            _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
23050     +            _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
23051     +            _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
23052     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23053     +         end;
MPRINT(EM_DIAGRAM):   end;
23054     +      end;
MPRINT(EM_DIAGRAM):   end;
23055     +   end;
MPRINT(EM_DIAGRAM):   end;
23056     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
23057     +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
23058     +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
23059     +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
23060     +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
23061     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23062     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23063     +   end;
MPRINT(EM_DIAGRAM):   end;
23064     +end;
MPRINT(EM_DIAGRAM):   end;
23065     +
23066     +*** Generate dummy variables for breast ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for breast ;
23067     +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
23068     +if missing( breast ) then do;
MPRINT(EM_DIAGRAM):   if missing( breast ) then do;
23069     +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
23070     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23071     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23072     +end;
MPRINT(EM_DIAGRAM):   end;
23073     +else do;
MPRINT(EM_DIAGRAM):   else do;
23074     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
23075     +   _dm5 = put( breast , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( breast , $5. );
23076     +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23077     +   if _dm5 = 'LEFT'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = 'LEFT' then do;
23078     +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
23079     +   end;
MPRINT(EM_DIAGRAM):   end;
23080     +   else if _dm5 = 'RIGHT'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'RIGHT' then do;
23081     +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
23082     +   end;
MPRINT(EM_DIAGRAM):   end;
23083     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23084     +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
23085     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23086     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23087     +   end;
MPRINT(EM_DIAGRAM):   end;
23088     +end;
MPRINT(EM_DIAGRAM):   end;
23089     +
23090     +*** Generate dummy variables for breast_quad ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for breast_quad ;
23091     +drop _3_0 _3_1 _3_2 _3_3 _3_4 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 _3_3 _3_4 ;
23092     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
23093     +_3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
23094     +_3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
23095     +_3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
23096     +_3_3 = 0;
MPRINT(EM_DIAGRAM):   _3_3 = 0;
23097     +_3_4 = 0;
MPRINT(EM_DIAGRAM):   _3_4 = 0;
23098     +if missing( breast_quad ) then do;
MPRINT(EM_DIAGRAM):   if missing( breast_quad ) then do;
23099     +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
23100     +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
23101     +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
23102     +   _3_3 = .;
MPRINT(EM_DIAGRAM):   _3_3 = .;
23103     +   _3_4 = .;
MPRINT(EM_DIAGRAM):   _3_4 = .;
23104     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23105     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23106     +end;
MPRINT(EM_DIAGRAM):   end;
23107     +else do;
MPRINT(EM_DIAGRAM):   else do;
23108     +   length _dm9 $ 9; drop _dm9 ;
MPRINT(EM_DIAGRAM):   length _dm9 $ 9;
MPRINT(EM_DIAGRAM):   drop _dm9 ;
23109     +   %DMNORMCP( breast_quad , _dm9 )
MPRINT(DMNORMCP):   _dm9=dmnorm(breast_quad,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
23110     +   if _dm9 = 'LEFT_LOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm9 = 'LEFT_LOW' then do;
23111     +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
23112     +   end;
MPRINT(EM_DIAGRAM):   end;
23113     +   else if _dm9 = 'LEFT_UP'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'LEFT_UP' then do;
23114     +      _3_3 = 1;
MPRINT(EM_DIAGRAM):   _3_3 = 1;
23115     +   end;
MPRINT(EM_DIAGRAM):   end;
23116     +   else if _dm9 = 'RIGHT_UP'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'RIGHT_UP' then do;
23117     +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
23118     +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
23119     +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
23120     +      _3_3 = -1;
MPRINT(EM_DIAGRAM):   _3_3 = -1;
23121     +      _3_4 = -1;
MPRINT(EM_DIAGRAM):   _3_4 = -1;
23122     +   end;
MPRINT(EM_DIAGRAM):   end;
23123     +   else if _dm9 = 'CENTRAL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'CENTRAL' then do;
23124     +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
23125     +   end;
MPRINT(EM_DIAGRAM):   end;
23126     +   else if _dm9 = 'RIGHT_LOW'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'RIGHT_LOW' then do;
23127     +      _3_4 = 1;
MPRINT(EM_DIAGRAM):   _3_4 = 1;
23128     +   end;
MPRINT(EM_DIAGRAM):   end;
23129     +   else if _dm9 = '?'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = '?' then do;
23130     +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
23131     +   end;
MPRINT(EM_DIAGRAM):   end;
23132     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23133     +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
23134     +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
23135     +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
23136     +      _3_3 = .;
MPRINT(EM_DIAGRAM):   _3_3 = .;
23137     +      _3_4 = .;
MPRINT(EM_DIAGRAM):   _3_4 = .;
23138     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23139     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23140     +   end;
MPRINT(EM_DIAGRAM):   end;
23141     +end;
MPRINT(EM_DIAGRAM):   end;
23142     +
23143     +*** Generate dummy variables for inv_nodes ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for inv_nodes ;
23144     +drop _4_0 _4_1 _4_2 _4_3 _4_4 ;
MPRINT(EM_DIAGRAM):   drop _4_0 _4_1 _4_2 _4_3 _4_4 ;
23145     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
23146     +_4_0 = 0;
MPRINT(EM_DIAGRAM):   _4_0 = 0;
23147     +_4_1 = 0;
MPRINT(EM_DIAGRAM):   _4_1 = 0;
23148     +_4_2 = 0;
MPRINT(EM_DIAGRAM):   _4_2 = 0;
23149     +_4_3 = 0;
MPRINT(EM_DIAGRAM):   _4_3 = 0;
23150     +_4_4 = 0;
MPRINT(EM_DIAGRAM):   _4_4 = 0;
23151     +if missing( inv_nodes ) then do;
MPRINT(EM_DIAGRAM):   if missing( inv_nodes ) then do;
23152     +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
23153     +   _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
23154     +   _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
23155     +   _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_3 = .;
23156     +   _4_4 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
23157     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23158     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23159     +end;
MPRINT(EM_DIAGRAM):   end;
23160     +else do;
MPRINT(EM_DIAGRAM):   else do;
23161     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
23162     +   _dm5 = put( inv_nodes , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( inv_nodes , $5. );
23163     +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23164     +   if _dm5 = '0-2'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '0-2' then do;
23165     +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
23166     +   end;
MPRINT(EM_DIAGRAM):   end;
23167     +   else if _dm5 = '44625'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '44625' then do;
23168     +      _4_3 = 1;
MPRINT(EM_DIAGRAM):   _4_3 = 1;
23169     +   end;
MPRINT(EM_DIAGRAM):   end;
23170     +   else if _dm5 = '15-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '15-17' then do;
23171     +      _4_1 = 1;
MPRINT(EM_DIAGRAM):   _4_1 = 1;
23172     +   end;
MPRINT(EM_DIAGRAM):   end;
23173     +   else if _dm5 = '44815'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '44815' then do;
23174     +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
23175     +      _4_1 = -1;
MPRINT(EM_DIAGRAM):   _4_1 = -1;
23176     +      _4_2 = -1;
MPRINT(EM_DIAGRAM):   _4_2 = -1;
23177     +      _4_3 = -1;
MPRINT(EM_DIAGRAM):   _4_3 = -1;
23178     +      _4_4 = -1;
MPRINT(EM_DIAGRAM):   _4_4 = -1;
23179     +   end;
MPRINT(EM_DIAGRAM):   end;
23180     +   else if _dm5 = '44720'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '44720' then do;
23181     +      _4_4 = 1;
MPRINT(EM_DIAGRAM):   _4_4 = 1;
23182     +   end;
MPRINT(EM_DIAGRAM):   end;
23183     +   else if _dm5 = '24-26'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '24-26' then do;
23184     +      _4_2 = 1;
MPRINT(EM_DIAGRAM):   _4_2 = 1;
23185     +   end;
MPRINT(EM_DIAGRAM):   end;
23186     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23187     +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
23188     +      _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
23189     +      _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
23190     +      _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_3 = .;
23191     +      _4_4 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
23192     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23193     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23194     +   end;
MPRINT(EM_DIAGRAM):   end;
23195     +end;
MPRINT(EM_DIAGRAM):   end;
23196     +
23197     +*** Generate dummy variables for irradiat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for irradiat ;
23198     +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
23199     +if missing( irradiat ) then do;
MPRINT(EM_DIAGRAM):   if missing( irradiat ) then do;
23200     +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
23201     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23202     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23203     +end;
MPRINT(EM_DIAGRAM):   end;
23204     +else do;
MPRINT(EM_DIAGRAM):   else do;
23205     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
23206     +   _dm3 = put( irradiat , $3. );
MPRINT(EM_DIAGRAM):   _dm3 = put( irradiat , $3. );
23207     +   %DMNORMIP( _dm3 )
MPRINT(DMNORMIP):   call dmnorm(_dm3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23208     +   if _dm3 = 'NO'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'NO' then do;
23209     +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
23210     +   end;
MPRINT(EM_DIAGRAM):   end;
23211     +   else if _dm3 = 'YES'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'YES' then do;
23212     +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
23213     +   end;
MPRINT(EM_DIAGRAM):   end;
23214     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23215     +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
23216     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23217     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23218     +   end;
MPRINT(EM_DIAGRAM):   end;
23219     +end;
MPRINT(EM_DIAGRAM):   end;
23220     +
23221     +*** Generate dummy variables for menopause ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for menopause ;
23222     +drop _6_0 _6_1 ;
MPRINT(EM_DIAGRAM):   drop _6_0 _6_1 ;
23223     +if missing( menopause ) then do;
MPRINT(EM_DIAGRAM):   if missing( menopause ) then do;
23224     +   _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
23225     +   _6_1 = .;
MPRINT(EM_DIAGRAM):   _6_1 = .;
23226     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23227     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23228     +end;
MPRINT(EM_DIAGRAM):   end;
23229     +else do;
MPRINT(EM_DIAGRAM):   else do;
23230     +   length _dm7 $ 7; drop _dm7 ;
MPRINT(EM_DIAGRAM):   length _dm7 $ 7;
MPRINT(EM_DIAGRAM):   drop _dm7 ;
23231     +   _dm7 = put( menopause , $7. );
MPRINT(EM_DIAGRAM):   _dm7 = put( menopause , $7. );
23232     +   %DMNORMIP( _dm7 )
MPRINT(DMNORMIP):   call dmnorm(_dm7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23233     +   if _dm7 = 'PREMENO'  then do;
MPRINT(EM_DIAGRAM):   if _dm7 = 'PREMENO' then do;
23234     +      _6_0 = -1;
MPRINT(EM_DIAGRAM):   _6_0 = -1;
23235     +      _6_1 = -1;
MPRINT(EM_DIAGRAM):   _6_1 = -1;
23236     +   end;
MPRINT(EM_DIAGRAM):   end;
23237     +   else if _dm7 = 'GE40'  then do;
MPRINT(EM_DIAGRAM):   else if _dm7 = 'GE40' then do;
23238     +      _6_0 = 1;
MPRINT(EM_DIAGRAM):   _6_0 = 1;
23239     +      _6_1 = 0;
MPRINT(EM_DIAGRAM):   _6_1 = 0;
23240     +   end;
MPRINT(EM_DIAGRAM):   end;
23241     +   else if _dm7 = 'LT40'  then do;
MPRINT(EM_DIAGRAM):   else if _dm7 = 'LT40' then do;
23242     +      _6_0 = 0;
MPRINT(EM_DIAGRAM):   _6_0 = 0;
23243     +      _6_1 = 1;
MPRINT(EM_DIAGRAM):   _6_1 = 1;
23244     +   end;
MPRINT(EM_DIAGRAM):   end;
23245     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23246     +      _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
23247     +      _6_1 = .;
MPRINT(EM_DIAGRAM):   _6_1 = .;
23248     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23249     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23250     +   end;
MPRINT(EM_DIAGRAM):   end;
23251     +end;
MPRINT(EM_DIAGRAM):   end;
23252     +
23253     +*** Generate dummy variables for node_caps ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for node_caps ;
23254     +drop _7_0 _7_1 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 ;
23255     +if missing( node_caps ) then do;
MPRINT(EM_DIAGRAM):   if missing( node_caps ) then do;
23256     +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
23257     +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
23258     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23259     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23260     +end;
MPRINT(EM_DIAGRAM):   end;
23261     +else do;
MPRINT(EM_DIAGRAM):   else do;
23262     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
23263     +   %DMNORMCP( node_caps , _dm3 )
MPRINT(DMNORMCP):   _dm3=dmnorm(node_caps,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
23264     +   if _dm3 = 'NO'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'NO' then do;
23265     +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
23266     +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
23267     +   end;
MPRINT(EM_DIAGRAM):   end;
23268     +   else if _dm3 = 'YES'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'YES' then do;
23269     +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
23270     +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
23271     +   end;
MPRINT(EM_DIAGRAM):   end;
23272     +   else if _dm3 = '?'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = '?' then do;
23273     +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
23274     +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
23275     +   end;
MPRINT(EM_DIAGRAM):   end;
23276     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23277     +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
23278     +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
23279     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23280     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23281     +   end;
MPRINT(EM_DIAGRAM):   end;
23282     +end;
MPRINT(EM_DIAGRAM):   end;
23283     +
23284     +*** Generate dummy variables for tumor_size ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for tumor_size ;
23285     +drop _8_0 _8_1 _8_2 _8_3 _8_4 _8_5 _8_6 _8_7 _8_8 _8_9 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 _8_4 _8_5 _8_6 _8_7 _8_8 _8_9 ;
23286     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
23287     +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
23288     +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
23289     +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
23290     +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
23291     +_8_4 = 0;
MPRINT(EM_DIAGRAM):   _8_4 = 0;
23292     +_8_5 = 0;
MPRINT(EM_DIAGRAM):   _8_5 = 0;
23293     +_8_6 = 0;
MPRINT(EM_DIAGRAM):   _8_6 = 0;
23294     +_8_7 = 0;
MPRINT(EM_DIAGRAM):   _8_7 = 0;
23295     +_8_8 = 0;
MPRINT(EM_DIAGRAM):   _8_8 = 0;
23296     +_8_9 = 0;
MPRINT(EM_DIAGRAM):   _8_9 = 0;
23297     +if missing( tumor_size ) then do;
MPRINT(EM_DIAGRAM):   if missing( tumor_size ) then do;
23298     +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
23299     +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
23300     +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
23301     +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
23302     +   _8_4 = .;
MPRINT(EM_DIAGRAM):   _8_4 = .;
23303     +   _8_5 = .;
MPRINT(EM_DIAGRAM):   _8_5 = .;
23304     +   _8_6 = .;
MPRINT(EM_DIAGRAM):   _8_6 = .;
23305     +   _8_7 = .;
MPRINT(EM_DIAGRAM):   _8_7 = .;
23306     +   _8_8 = .;
MPRINT(EM_DIAGRAM):   _8_8 = .;
23307     +   _8_9 = .;
MPRINT(EM_DIAGRAM):   _8_9 = .;
23308     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23309     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23310     +end;
MPRINT(EM_DIAGRAM):   end;
23311     +else do;
MPRINT(EM_DIAGRAM):   else do;
23312     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
23313     +   %DMNORMCP( tumor_size , _dm5 )
MPRINT(DMNORMCP):   _dm5=dmnorm(tumor_size,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
23314     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
23315     +   if _dm5 <= '35-39'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '35-39' then do;
23316     +      if _dm5 <= '20-24'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '20-24' then do;
23317     +         if _dm5 <= '15-19'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '15-19' then do;
23318     +            if _dm5 = '0-4'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '0-4' then do;
23319     +               _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
23320     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23321     +            end;
MPRINT(EM_DIAGRAM):   end;
23322     +            else do;
MPRINT(EM_DIAGRAM):   else do;
23323     +               if _dm5 = '15-19'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '15-19' then do;
23324     +                  _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
23325     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23326     +               end;
MPRINT(EM_DIAGRAM):   end;
23327     +            end;
MPRINT(EM_DIAGRAM):   end;
23328     +         end;
MPRINT(EM_DIAGRAM):   end;
23329     +         else do;
MPRINT(EM_DIAGRAM):   else do;
23330     +            if _dm5 = '20-24'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '20-24' then do;
23331     +               _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
23332     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23333     +            end;
MPRINT(EM_DIAGRAM):   end;
23334     +         end;
MPRINT(EM_DIAGRAM):   end;
23335     +      end;
MPRINT(EM_DIAGRAM):   end;
23336     +      else do;
MPRINT(EM_DIAGRAM):   else do;
23337     +         if _dm5 <= '30-34'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '30-34' then do;
23338     +            if _dm5 = '25-29'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '25-29' then do;
23339     +               _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
23340     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23341     +            end;
MPRINT(EM_DIAGRAM):   end;
23342     +            else do;
MPRINT(EM_DIAGRAM):   else do;
23343     +               if _dm5 = '30-34'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '30-34' then do;
23344     +                  _8_4 = 1;
MPRINT(EM_DIAGRAM):   _8_4 = 1;
23345     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23346     +               end;
MPRINT(EM_DIAGRAM):   end;
23347     +            end;
MPRINT(EM_DIAGRAM):   end;
23348     +         end;
MPRINT(EM_DIAGRAM):   end;
23349     +         else do;
MPRINT(EM_DIAGRAM):   else do;
23350     +            if _dm5 = '35-39'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '35-39' then do;
23351     +               _8_5 = 1;
MPRINT(EM_DIAGRAM):   _8_5 = 1;
23352     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23353     +            end;
MPRINT(EM_DIAGRAM):   end;
23354     +         end;
MPRINT(EM_DIAGRAM):   end;
23355     +      end;
MPRINT(EM_DIAGRAM):   end;
23356     +   end;
MPRINT(EM_DIAGRAM):   end;
23357     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23358     +      if _dm5 <= '44848'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '44848' then do;
23359     +         if _dm5 <= '44690'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '44690' then do;
23360     +            if _dm5 = '40-44'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '40-44' then do;
23361     +               _8_6 = 1;
MPRINT(EM_DIAGRAM):   _8_6 = 1;
23362     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23363     +            end;
MPRINT(EM_DIAGRAM):   end;
23364     +            else do;
MPRINT(EM_DIAGRAM):   else do;
23365     +               if _dm5 = '44690'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '44690' then do;
23366     +                  _8_7 = 1;
MPRINT(EM_DIAGRAM):   _8_7 = 1;
23367     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23368     +               end;
MPRINT(EM_DIAGRAM):   end;
23369     +            end;
MPRINT(EM_DIAGRAM):   end;
23370     +         end;
MPRINT(EM_DIAGRAM):   end;
23371     +         else do;
MPRINT(EM_DIAGRAM):   else do;
23372     +            if _dm5 = '44848'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '44848' then do;
23373     +               _8_8 = 1;
MPRINT(EM_DIAGRAM):   _8_8 = 1;
23374     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23375     +            end;
MPRINT(EM_DIAGRAM):   end;
23376     +         end;
MPRINT(EM_DIAGRAM):   end;
23377     +      end;
MPRINT(EM_DIAGRAM):   end;
23378     +      else do;
MPRINT(EM_DIAGRAM):   else do;
23379     +         if _dm5 = '45-49'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '45-49' then do;
23380     +            _8_9 = 1;
MPRINT(EM_DIAGRAM):   _8_9 = 1;
23381     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23382     +         end;
MPRINT(EM_DIAGRAM):   end;
23383     +         else do;
MPRINT(EM_DIAGRAM):   else do;
23384     +            if _dm5 = '50-54'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '50-54' then do;
23385     +               _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
23386     +               _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
23387     +               _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
23388     +               _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
23389     +               _8_4 = -1;
MPRINT(EM_DIAGRAM):   _8_4 = -1;
23390     +               _8_5 = -1;
MPRINT(EM_DIAGRAM):   _8_5 = -1;
23391     +               _8_6 = -1;
MPRINT(EM_DIAGRAM):   _8_6 = -1;
23392     +               _8_7 = -1;
MPRINT(EM_DIAGRAM):   _8_7 = -1;
23393     +               _8_8 = -1;
MPRINT(EM_DIAGRAM):   _8_8 = -1;
23394     +               _8_9 = -1;
MPRINT(EM_DIAGRAM):   _8_9 = -1;
23395     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23396     +            end;
MPRINT(EM_DIAGRAM):   end;
23397     +         end;
MPRINT(EM_DIAGRAM):   end;
23398     +      end;
MPRINT(EM_DIAGRAM):   end;
23399     +   end;
MPRINT(EM_DIAGRAM):   end;
23400     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
23401     +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
23402     +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
23403     +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
23404     +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
23405     +      _8_4 = .;
MPRINT(EM_DIAGRAM):   _8_4 = .;
23406     +      _8_5 = .;
MPRINT(EM_DIAGRAM):   _8_5 = .;
23407     +      _8_6 = .;
MPRINT(EM_DIAGRAM):   _8_6 = .;
23408     +      _8_7 = .;
MPRINT(EM_DIAGRAM):   _8_7 = .;
23409     +      _8_8 = .;
MPRINT(EM_DIAGRAM):   _8_8 = .;
23410     +      _8_9 = .;
MPRINT(EM_DIAGRAM):   _8_9 = .;
23411     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23412     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23413     +   end;
MPRINT(EM_DIAGRAM):   end;
23414     +end;
MPRINT(EM_DIAGRAM):   end;
23415     +
23416     +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
23417     +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
23418     +   _P0 = 0.2920353982;
MPRINT(EM_DIAGRAM):   _P0 = 0.2920353982;
23419     +   _P1 = 0.7079646018;
MPRINT(EM_DIAGRAM):   _P1 = 0.7079646018;
23420     +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
23421     +end;
MPRINT(EM_DIAGRAM):   end;
23422     +
23423     +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
23424     +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
23425     +drop _LP0 ;
MPRINT(EM_DIAGRAM):   drop _LP0 ;
23426     +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
23427     +
23428     +***  Effect: REP_deg_malig ;
MPRINT(EM_DIAGRAM):   *** Effect: REP_deg_malig ;
23429     +_TEMP = REP_deg_malig ;
MPRINT(EM_DIAGRAM):   _TEMP = REP_deg_malig ;
23430     +_LP0 = _LP0 + (    0.74188815265941 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74188815265941 * _TEMP);
23431     +
23432     +***  Effect: age ;
MPRINT(EM_DIAGRAM):   *** Effect: age ;
23433     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
23434     +_LP0 = _LP0 + (     1.2711526472824) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.2711526472824) * _TEMP * _1_0;
23435     +_LP0 = _LP0 + (    3.51118587377913) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.51118587377913) * _TEMP * _1_1;
23436     +_LP0 = _LP0 + (    1.77015584013962) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.77015584013962) * _TEMP * _1_2;
23437     +_LP0 = _LP0 + (    3.24429045271765) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.24429045271765) * _TEMP * _1_3;
23438     +
23439     +***  Effect: breast ;
MPRINT(EM_DIAGRAM):   *** Effect: breast ;
23440     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
23441     +_LP0 = _LP0 + (   -0.55362156774278) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.55362156774278) * _TEMP * _2_0;
23442     +
23443     +***  Effect: breast_quad ;
MPRINT(EM_DIAGRAM):   *** Effect: breast_quad ;
23444     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
23445     +_LP0 = _LP0 + (    13.7360898428639) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 13.7360898428639) * _TEMP * _3_0;
23446     +_LP0 = _LP0 + (   -1.34657631410209) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.34657631410209) * _TEMP * _3_1;
23447     +_LP0 = _LP0 + (   -2.87020658947285) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.87020658947285) * _TEMP * _3_2;
23448     +_LP0 = _LP0 + (   -3.60528108373917) * _TEMP * _3_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.60528108373917) * _TEMP * _3_3;
23449     +_LP0 = _LP0 + (   -2.02455025813794) * _TEMP * _3_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.02455025813794) * _TEMP * _3_4;
23450     +
23451     +***  Effect: inv_nodes ;
MPRINT(EM_DIAGRAM):   *** Effect: inv_nodes ;
23452     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
23453     +_LP0 = _LP0 + (   -3.92999632834698) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.92999632834698) * _TEMP * _4_0;
23454     +_LP0 = _LP0 + (   -1.85577896916898) * _TEMP * _4_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.85577896916898) * _TEMP * _4_1;
23455     +_LP0 = _LP0 + (    11.4860062818446) * _TEMP * _4_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 11.4860062818446) * _TEMP * _4_2;
23456     +_LP0 = _LP0 + (   -2.40138030631945) * _TEMP * _4_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.40138030631945) * _TEMP * _4_3;
23457     +_LP0 = _LP0 + (   -1.69160020226667) * _TEMP * _4_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.69160020226667) * _TEMP * _4_4;
23458     +
23459     +***  Effect: irradiat ;
MPRINT(EM_DIAGRAM):   *** Effect: irradiat ;
23460     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
23461     +_LP0 = _LP0 + (    0.05106811531383) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05106811531383) * _TEMP * _5_0;
23462     +
23463     +***  Effect: menopause ;
MPRINT(EM_DIAGRAM):   *** Effect: menopause ;
23464     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
23465     +_LP0 = _LP0 + (    3.68241923615777) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.68241923615777) * _TEMP * _6_0;
23466     +_LP0 = _LP0 + (   -8.03309066307678) * _TEMP * _6_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -8.03309066307678) * _TEMP * _6_1;
23467     +
23468     +***  Effect: node_caps ;
MPRINT(EM_DIAGRAM):   *** Effect: node_caps ;
23469     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
23470     +_LP0 = _LP0 + (   -9.61607022474882) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -9.61607022474882) * _TEMP * _7_0;
23471     +_LP0 = _LP0 + (     4.8963217947722) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.8963217947722) * _TEMP * _7_1;
23472     +
23473     +***  Effect: tumor_size ;
MPRINT(EM_DIAGRAM):   *** Effect: tumor_size ;
23474     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
23475     +_LP0 = _LP0 + (   -10.0604143863662) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -10.0604143863662) * _TEMP * _8_0;
23476     +_LP0 = _LP0 + (     4.6393813293927) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.6393813293927) * _TEMP * _8_1;
23477     +_LP0 = _LP0 + (    5.07127301211026) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.07127301211026) * _TEMP * _8_2;
23478     +_LP0 = _LP0 + (    5.06886354257634) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.06886354257634) * _TEMP * _8_3;
23479     +_LP0 = _LP0 + (    5.07640420879079) * _TEMP * _8_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.07640420879079) * _TEMP * _8_4;
23480     +_LP0 = _LP0 + (    3.66865920399611) * _TEMP * _8_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.66865920399611) * _TEMP * _8_5;
23481     +_LP0 = _LP0 + (    5.25094886049268) * _TEMP * _8_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.25094886049268) * _TEMP * _8_6;
23482     +_LP0 = _LP0 + (   -8.25096914859845) * _TEMP * _8_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -8.25096914859845) * _TEMP * _8_7;
23483     +_LP0 = _LP0 + (   -7.96985669817867) * _TEMP * _8_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -7.96985669817867) * _TEMP * _8_8;
23484     +_LP0 = _LP0 + (   -8.99285729799633) * _TEMP * _8_9;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -8.99285729799633) * _TEMP * _8_9;
23485     +
23486     +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
23487     +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
23488     +drop _LPMAX;
MPRINT(EM_DIAGRAM):   drop _LPMAX;
23489     +_LPMAX= 0;
MPRINT(EM_DIAGRAM):   _LPMAX= 0;
23490     +_LP0 =    -12.2948238272586 + _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = -12.2948238272586 + _LP0;
23491     +if _LPMAX < _LP0 then _LPMAX = _LP0;
MPRINT(EM_DIAGRAM):   if _LPMAX < _LP0 then _LPMAX = _LP0;
23492     +_LP0 = exp(_LP0 - _LPMAX);
MPRINT(EM_DIAGRAM):   _LP0 = exp(_LP0 - _LPMAX);
23493     +_LPMAX = exp(-_LPMAX);
MPRINT(EM_DIAGRAM):   _LPMAX = exp(-_LPMAX);
23494     +_P1 = 1 / (_LPMAX + _LP0);
MPRINT(EM_DIAGRAM):   _P1 = 1 / (_LPMAX + _LP0);
23495     +_P0 = _LP0 * _P1;
MPRINT(EM_DIAGRAM):   _P0 = _LP0 * _P1;
23496     +_P1 = _LPMAX * _P1;
MPRINT(EM_DIAGRAM):   _P1 = _LPMAX * _P1;
23497     +
23498     +REGDR1:
23499     +
23500     +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
23501     +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
23502     +   R_classrecurrence_events = .;
MPRINT(EM_DIAGRAM):   R_classrecurrence_events = .;
23503     +   R_classno_recurrence_events = .;
MPRINT(EM_DIAGRAM):   R_classno_recurrence_events = .;
23504     +end;
MPRINT(EM_DIAGRAM):   end;
23505     +else do;
MPRINT(EM_DIAGRAM):   else do;
23506     +    label R_classrecurrence_events = 'Residual: class=recurrence-events' ;
MPRINT(EM_DIAGRAM):   label R_classrecurrence_events = 'Residual: class=recurrence-events' ;
23507     +    label R_classno_recurrence_events =
23508     +'Residual: class=no-recurrence-events' ;
MPRINT(EM_DIAGRAM):   label R_classno_recurrence_events = 'Residual: class=no-recurrence-events' ;
23509     +   R_classrecurrence_events = - _P0;
MPRINT(EM_DIAGRAM):   R_classrecurrence_events = - _P0;
23510     +   R_classno_recurrence_events = - _P1;
MPRINT(EM_DIAGRAM):   R_classno_recurrence_events = - _P1;
23511     +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
23512     +      when (0)  R_classrecurrence_events = R_classrecurrence_events + 1;
MPRINT(EM_DIAGRAM):   when (0) R_classrecurrence_events = R_classrecurrence_events + 1;
23513     +      when (1)  R_classno_recurrence_events = R_classno_recurrence_events + 1;
MPRINT(EM_DIAGRAM):   when (1) R_classno_recurrence_events = R_classno_recurrence_events + 1;
23514     +   end;
MPRINT(EM_DIAGRAM):   end;
23515     +end;
MPRINT(EM_DIAGRAM):   end;
23516     +
23517     +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
23518     +label P_classrecurrence_events = 'Predicted: class=recurrence-events' ;
MPRINT(EM_DIAGRAM):   label P_classrecurrence_events = 'Predicted: class=recurrence-events' ;
23519     +label P_classno_recurrence_events = 'Predicted: class=no-recurrence-events' ;
MPRINT(EM_DIAGRAM):   label P_classno_recurrence_events = 'Predicted: class=no-recurrence-events' ;
23520     +P_classrecurrence_events = _P0;
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = _P0;
23521     +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
23522     +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
23523     +P_classno_recurrence_events = _P1;
MPRINT(EM_DIAGRAM):   P_classno_recurrence_events = _P1;
23524     +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
23525     +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
23526     +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
23527     +end;
MPRINT(EM_DIAGRAM):   end;
23528     +I_class = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_class = REGDRF[_IY];
23529     +U_class = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_class = REGDRU[_IY];
23530     +
23531     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
23532     +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
23533     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
23534      run;

NOTE: DATA STEP view saved on file EMWS1.REG_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_DIAGRAM):   quit;
23535      quit;
23536      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
23537      filename emflow "D:\\BAN210PA\Workspaces\EMWS1\Reg\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "D:\\BAN210PA\Workspaces\EMWS1\Reg\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23538      *------------------------------------------------------------*;
23539      * Reg: Scoring TEST data;
23540      *------------------------------------------------------------*;
23541      data EMWS1.Reg_TEST
23542      / view=EMWS1.Reg_TEST
23543      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Reg_TEST / view=EMWS1.Reg_TEST ;
23544      set EMWS1.Trans_TEST
23545      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_TEST ;
23546      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file D:\\BAN210PA\Workspaces\EMWS1\Reg\EMFLOWSCORE.sas.
23547     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
23548     +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
23549     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
23550     +
23551     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
23552     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
23553     +
23554     +length I_class $ 20;
MPRINT(EM_DIAGRAM):   length I_class $ 20;
23555     +label I_class = 'Into: class' ;
MPRINT(EM_DIAGRAM):   label I_class = 'Into: class' ;
23556     +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
23557     +array REGDRF [2] $20 _temporary_ ('RECURRENCE-EVENTS' 'NO-RECURRENCE-EVENTS'
23558     +        );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $20 _temporary_ ('RECURRENCE-EVENTS' 'NO-RECURRENCE-EVENTS' );
23559     +label U_class = 'Unnormalized Into: class' ;
MPRINT(EM_DIAGRAM):   label U_class = 'Unnormalized Into: class' ;
23560     +format U_class $20.;
MPRINT(EM_DIAGRAM):   format U_class $20.;
23561     +length U_class $ 20;
MPRINT(EM_DIAGRAM):   length U_class $ 20;
23562     +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
23563     +array REGDRU[2] $ 20 _temporary_ ('recurrence-events   '
23564     +'no-recurrence-events' );
MPRINT(EM_DIAGRAM):   array REGDRU[2] $ 20 _temporary_ ('recurrence-events   ' 'no-recurrence-events' );
23565     +
23566     +*** Generate dummy variables for class ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for class ;
23567     +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
23568     +label F_class = 'From: class' ;
MPRINT(EM_DIAGRAM):   label F_class = 'From: class' ;
23569     +length F_class $ 20;
MPRINT(EM_DIAGRAM):   length F_class $ 20;
23570     +F_class = put( class , $20. );
MPRINT(EM_DIAGRAM):   F_class = put( class , $20. );
23571     +%DMNORMIP( F_class )
MPRINT(DMNORMIP):   call dmnorm(F_class,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23572     +if missing( class ) then do;
MPRINT(EM_DIAGRAM):   if missing( class ) then do;
23573     +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
23574     +end;
MPRINT(EM_DIAGRAM):   end;
23575     +else do;
MPRINT(EM_DIAGRAM):   else do;
23576     +   if F_class = 'NO-RECURRENCE-EVENTS'  then do;
MPRINT(EM_DIAGRAM):   if F_class = 'NO-RECURRENCE-EVENTS' then do;
23577     +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
23578     +   end;
MPRINT(EM_DIAGRAM):   end;
23579     +   else if F_class = 'RECURRENCE-EVENTS'  then do;
MPRINT(EM_DIAGRAM):   else if F_class = 'RECURRENCE-EVENTS' then do;
23580     +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
23581     +   end;
MPRINT(EM_DIAGRAM):   end;
23582     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23583     +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
23584     +   end;
MPRINT(EM_DIAGRAM):   end;
23585     +end;
MPRINT(EM_DIAGRAM):   end;
23586     +
23587     +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
23588     +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
23589     +
23590     +*** Check REP_deg_malig for missing values ;
MPRINT(EM_DIAGRAM):   *** Check REP_deg_malig for missing values ;
23591     +if missing( REP_deg_malig ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_deg_malig ) then do;
23592     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23593     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23594     +end;
MPRINT(EM_DIAGRAM):   end;
23595     +
23596     +*** Generate dummy variables for age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for age ;
23597     +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
23598     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
23599     +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
23600     +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
23601     +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
23602     +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
23603     +if missing( age ) then do;
MPRINT(EM_DIAGRAM):   if missing( age ) then do;
23604     +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
23605     +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
23606     +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
23607     +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
23608     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23609     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23610     +end;
MPRINT(EM_DIAGRAM):   end;
23611     +else do;
MPRINT(EM_DIAGRAM):   else do;
23612     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
23613     +   _dm5 = put( age , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( age , $5. );
23614     +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23615     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
23616     +   if _dm5 <= '50-59'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '50-59' then do;
23617     +      if _dm5 <= '40-49'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '40-49' then do;
23618     +         if _dm5 = '30-39'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '30-39' then do;
23619     +            _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
23620     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23621     +         end;
MPRINT(EM_DIAGRAM):   end;
23622     +         else do;
MPRINT(EM_DIAGRAM):   else do;
23623     +            if _dm5 = '40-49'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '40-49' then do;
23624     +               _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
23625     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23626     +            end;
MPRINT(EM_DIAGRAM):   end;
23627     +         end;
MPRINT(EM_DIAGRAM):   end;
23628     +      end;
MPRINT(EM_DIAGRAM):   end;
23629     +      else do;
MPRINT(EM_DIAGRAM):   else do;
23630     +         if _dm5 = '50-59'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '50-59' then do;
23631     +            _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
23632     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23633     +         end;
MPRINT(EM_DIAGRAM):   end;
23634     +      end;
MPRINT(EM_DIAGRAM):   end;
23635     +   end;
MPRINT(EM_DIAGRAM):   end;
23636     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23637     +      if _dm5 = '60-69'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '60-69' then do;
23638     +         _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
23639     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23640     +      end;
MPRINT(EM_DIAGRAM):   end;
23641     +      else do;
MPRINT(EM_DIAGRAM):   else do;
23642     +         if _dm5 = '70-79'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '70-79' then do;
23643     +            _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
23644     +            _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
23645     +            _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
23646     +            _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
23647     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23648     +         end;
MPRINT(EM_DIAGRAM):   end;
23649     +      end;
MPRINT(EM_DIAGRAM):   end;
23650     +   end;
MPRINT(EM_DIAGRAM):   end;
23651     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
23652     +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
23653     +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
23654     +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
23655     +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
23656     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23657     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23658     +   end;
MPRINT(EM_DIAGRAM):   end;
23659     +end;
MPRINT(EM_DIAGRAM):   end;
23660     +
23661     +*** Generate dummy variables for breast ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for breast ;
23662     +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
23663     +if missing( breast ) then do;
MPRINT(EM_DIAGRAM):   if missing( breast ) then do;
23664     +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
23665     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23666     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23667     +end;
MPRINT(EM_DIAGRAM):   end;
23668     +else do;
MPRINT(EM_DIAGRAM):   else do;
23669     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
23670     +   _dm5 = put( breast , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( breast , $5. );
23671     +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23672     +   if _dm5 = 'LEFT'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = 'LEFT' then do;
23673     +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
23674     +   end;
MPRINT(EM_DIAGRAM):   end;
23675     +   else if _dm5 = 'RIGHT'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'RIGHT' then do;
23676     +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
23677     +   end;
MPRINT(EM_DIAGRAM):   end;
23678     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23679     +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
23680     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23681     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23682     +   end;
MPRINT(EM_DIAGRAM):   end;
23683     +end;
MPRINT(EM_DIAGRAM):   end;
23684     +
23685     +*** Generate dummy variables for breast_quad ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for breast_quad ;
23686     +drop _3_0 _3_1 _3_2 _3_3 _3_4 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 _3_3 _3_4 ;
23687     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
23688     +_3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
23689     +_3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
23690     +_3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
23691     +_3_3 = 0;
MPRINT(EM_DIAGRAM):   _3_3 = 0;
23692     +_3_4 = 0;
MPRINT(EM_DIAGRAM):   _3_4 = 0;
23693     +if missing( breast_quad ) then do;
MPRINT(EM_DIAGRAM):   if missing( breast_quad ) then do;
23694     +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
23695     +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
23696     +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
23697     +   _3_3 = .;
MPRINT(EM_DIAGRAM):   _3_3 = .;
23698     +   _3_4 = .;
MPRINT(EM_DIAGRAM):   _3_4 = .;
23699     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23700     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23701     +end;
MPRINT(EM_DIAGRAM):   end;
23702     +else do;
MPRINT(EM_DIAGRAM):   else do;
23703     +   length _dm9 $ 9; drop _dm9 ;
MPRINT(EM_DIAGRAM):   length _dm9 $ 9;
MPRINT(EM_DIAGRAM):   drop _dm9 ;
23704     +   %DMNORMCP( breast_quad , _dm9 )
MPRINT(DMNORMCP):   _dm9=dmnorm(breast_quad,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
23705     +   if _dm9 = 'LEFT_LOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm9 = 'LEFT_LOW' then do;
23706     +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
23707     +   end;
MPRINT(EM_DIAGRAM):   end;
23708     +   else if _dm9 = 'LEFT_UP'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'LEFT_UP' then do;
23709     +      _3_3 = 1;
MPRINT(EM_DIAGRAM):   _3_3 = 1;
23710     +   end;
MPRINT(EM_DIAGRAM):   end;
23711     +   else if _dm9 = 'RIGHT_UP'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'RIGHT_UP' then do;
23712     +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
23713     +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
23714     +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
23715     +      _3_3 = -1;
MPRINT(EM_DIAGRAM):   _3_3 = -1;
23716     +      _3_4 = -1;
MPRINT(EM_DIAGRAM):   _3_4 = -1;
23717     +   end;
MPRINT(EM_DIAGRAM):   end;
23718     +   else if _dm9 = 'CENTRAL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'CENTRAL' then do;
23719     +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
23720     +   end;
MPRINT(EM_DIAGRAM):   end;
23721     +   else if _dm9 = 'RIGHT_LOW'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'RIGHT_LOW' then do;
23722     +      _3_4 = 1;
MPRINT(EM_DIAGRAM):   _3_4 = 1;
23723     +   end;
MPRINT(EM_DIAGRAM):   end;
23724     +   else if _dm9 = '?'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = '?' then do;
23725     +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
23726     +   end;
MPRINT(EM_DIAGRAM):   end;
23727     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23728     +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
23729     +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
23730     +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
23731     +      _3_3 = .;
MPRINT(EM_DIAGRAM):   _3_3 = .;
23732     +      _3_4 = .;
MPRINT(EM_DIAGRAM):   _3_4 = .;
23733     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23734     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23735     +   end;
MPRINT(EM_DIAGRAM):   end;
23736     +end;
MPRINT(EM_DIAGRAM):   end;
23737     +
23738     +*** Generate dummy variables for inv_nodes ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for inv_nodes ;
23739     +drop _4_0 _4_1 _4_2 _4_3 _4_4 ;
MPRINT(EM_DIAGRAM):   drop _4_0 _4_1 _4_2 _4_3 _4_4 ;
23740     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
23741     +_4_0 = 0;
MPRINT(EM_DIAGRAM):   _4_0 = 0;
23742     +_4_1 = 0;
MPRINT(EM_DIAGRAM):   _4_1 = 0;
23743     +_4_2 = 0;
MPRINT(EM_DIAGRAM):   _4_2 = 0;
23744     +_4_3 = 0;
MPRINT(EM_DIAGRAM):   _4_3 = 0;
23745     +_4_4 = 0;
MPRINT(EM_DIAGRAM):   _4_4 = 0;
23746     +if missing( inv_nodes ) then do;
MPRINT(EM_DIAGRAM):   if missing( inv_nodes ) then do;
23747     +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
23748     +   _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
23749     +   _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
23750     +   _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_3 = .;
23751     +   _4_4 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
23752     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23753     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23754     +end;
MPRINT(EM_DIAGRAM):   end;
23755     +else do;
MPRINT(EM_DIAGRAM):   else do;
23756     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
23757     +   _dm5 = put( inv_nodes , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( inv_nodes , $5. );
23758     +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23759     +   if _dm5 = '0-2'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '0-2' then do;
23760     +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
23761     +   end;
MPRINT(EM_DIAGRAM):   end;
23762     +   else if _dm5 = '44625'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '44625' then do;
23763     +      _4_3 = 1;
MPRINT(EM_DIAGRAM):   _4_3 = 1;
23764     +   end;
MPRINT(EM_DIAGRAM):   end;
23765     +   else if _dm5 = '15-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '15-17' then do;
23766     +      _4_1 = 1;
MPRINT(EM_DIAGRAM):   _4_1 = 1;
23767     +   end;
MPRINT(EM_DIAGRAM):   end;
23768     +   else if _dm5 = '44815'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '44815' then do;
23769     +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
23770     +      _4_1 = -1;
MPRINT(EM_DIAGRAM):   _4_1 = -1;
23771     +      _4_2 = -1;
MPRINT(EM_DIAGRAM):   _4_2 = -1;
23772     +      _4_3 = -1;
MPRINT(EM_DIAGRAM):   _4_3 = -1;
23773     +      _4_4 = -1;
MPRINT(EM_DIAGRAM):   _4_4 = -1;
23774     +   end;
MPRINT(EM_DIAGRAM):   end;
23775     +   else if _dm5 = '44720'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '44720' then do;
23776     +      _4_4 = 1;
MPRINT(EM_DIAGRAM):   _4_4 = 1;
23777     +   end;
MPRINT(EM_DIAGRAM):   end;
23778     +   else if _dm5 = '24-26'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '24-26' then do;
23779     +      _4_2 = 1;
MPRINT(EM_DIAGRAM):   _4_2 = 1;
23780     +   end;
MPRINT(EM_DIAGRAM):   end;
23781     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23782     +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
23783     +      _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
23784     +      _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
23785     +      _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_3 = .;
23786     +      _4_4 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
23787     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23788     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23789     +   end;
MPRINT(EM_DIAGRAM):   end;
23790     +end;
MPRINT(EM_DIAGRAM):   end;
23791     +
23792     +*** Generate dummy variables for irradiat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for irradiat ;
23793     +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
23794     +if missing( irradiat ) then do;
MPRINT(EM_DIAGRAM):   if missing( irradiat ) then do;
23795     +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
23796     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23797     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23798     +end;
MPRINT(EM_DIAGRAM):   end;
23799     +else do;
MPRINT(EM_DIAGRAM):   else do;
23800     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
23801     +   _dm3 = put( irradiat , $3. );
MPRINT(EM_DIAGRAM):   _dm3 = put( irradiat , $3. );
23802     +   %DMNORMIP( _dm3 )
MPRINT(DMNORMIP):   call dmnorm(_dm3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23803     +   if _dm3 = 'NO'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'NO' then do;
23804     +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
23805     +   end;
MPRINT(EM_DIAGRAM):   end;
23806     +   else if _dm3 = 'YES'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'YES' then do;
23807     +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
23808     +   end;
MPRINT(EM_DIAGRAM):   end;
23809     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23810     +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
23811     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23812     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23813     +   end;
MPRINT(EM_DIAGRAM):   end;
23814     +end;
MPRINT(EM_DIAGRAM):   end;
23815     +
23816     +*** Generate dummy variables for menopause ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for menopause ;
23817     +drop _6_0 _6_1 ;
MPRINT(EM_DIAGRAM):   drop _6_0 _6_1 ;
23818     +if missing( menopause ) then do;
MPRINT(EM_DIAGRAM):   if missing( menopause ) then do;
23819     +   _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
23820     +   _6_1 = .;
MPRINT(EM_DIAGRAM):   _6_1 = .;
23821     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23822     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23823     +end;
MPRINT(EM_DIAGRAM):   end;
23824     +else do;
MPRINT(EM_DIAGRAM):   else do;
23825     +   length _dm7 $ 7; drop _dm7 ;
MPRINT(EM_DIAGRAM):   length _dm7 $ 7;
MPRINT(EM_DIAGRAM):   drop _dm7 ;
23826     +   _dm7 = put( menopause , $7. );
MPRINT(EM_DIAGRAM):   _dm7 = put( menopause , $7. );
23827     +   %DMNORMIP( _dm7 )
MPRINT(DMNORMIP):   call dmnorm(_dm7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23828     +   if _dm7 = 'PREMENO'  then do;
MPRINT(EM_DIAGRAM):   if _dm7 = 'PREMENO' then do;
23829     +      _6_0 = -1;
MPRINT(EM_DIAGRAM):   _6_0 = -1;
23830     +      _6_1 = -1;
MPRINT(EM_DIAGRAM):   _6_1 = -1;
23831     +   end;
MPRINT(EM_DIAGRAM):   end;
23832     +   else if _dm7 = 'GE40'  then do;
MPRINT(EM_DIAGRAM):   else if _dm7 = 'GE40' then do;
23833     +      _6_0 = 1;
MPRINT(EM_DIAGRAM):   _6_0 = 1;
23834     +      _6_1 = 0;
MPRINT(EM_DIAGRAM):   _6_1 = 0;
23835     +   end;
MPRINT(EM_DIAGRAM):   end;
23836     +   else if _dm7 = 'LT40'  then do;
MPRINT(EM_DIAGRAM):   else if _dm7 = 'LT40' then do;
23837     +      _6_0 = 0;
MPRINT(EM_DIAGRAM):   _6_0 = 0;
23838     +      _6_1 = 1;
MPRINT(EM_DIAGRAM):   _6_1 = 1;
23839     +   end;
MPRINT(EM_DIAGRAM):   end;
23840     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23841     +      _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
23842     +      _6_1 = .;
MPRINT(EM_DIAGRAM):   _6_1 = .;
23843     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23844     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23845     +   end;
MPRINT(EM_DIAGRAM):   end;
23846     +end;
MPRINT(EM_DIAGRAM):   end;
23847     +
23848     +*** Generate dummy variables for node_caps ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for node_caps ;
23849     +drop _7_0 _7_1 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 ;
23850     +if missing( node_caps ) then do;
MPRINT(EM_DIAGRAM):   if missing( node_caps ) then do;
23851     +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
23852     +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
23853     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23854     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23855     +end;
MPRINT(EM_DIAGRAM):   end;
23856     +else do;
MPRINT(EM_DIAGRAM):   else do;
23857     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
23858     +   %DMNORMCP( node_caps , _dm3 )
MPRINT(DMNORMCP):   _dm3=dmnorm(node_caps,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
23859     +   if _dm3 = 'NO'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'NO' then do;
23860     +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
23861     +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
23862     +   end;
MPRINT(EM_DIAGRAM):   end;
23863     +   else if _dm3 = 'YES'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'YES' then do;
23864     +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
23865     +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
23866     +   end;
MPRINT(EM_DIAGRAM):   end;
23867     +   else if _dm3 = '?'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = '?' then do;
23868     +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
23869     +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
23870     +   end;
MPRINT(EM_DIAGRAM):   end;
23871     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23872     +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
23873     +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
23874     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23875     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23876     +   end;
MPRINT(EM_DIAGRAM):   end;
23877     +end;
MPRINT(EM_DIAGRAM):   end;
23878     +
23879     +*** Generate dummy variables for tumor_size ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for tumor_size ;
23880     +drop _8_0 _8_1 _8_2 _8_3 _8_4 _8_5 _8_6 _8_7 _8_8 _8_9 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 _8_4 _8_5 _8_6 _8_7 _8_8 _8_9 ;
23881     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
23882     +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
23883     +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
23884     +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
23885     +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
23886     +_8_4 = 0;
MPRINT(EM_DIAGRAM):   _8_4 = 0;
23887     +_8_5 = 0;
MPRINT(EM_DIAGRAM):   _8_5 = 0;
23888     +_8_6 = 0;
MPRINT(EM_DIAGRAM):   _8_6 = 0;
23889     +_8_7 = 0;
MPRINT(EM_DIAGRAM):   _8_7 = 0;
23890     +_8_8 = 0;
MPRINT(EM_DIAGRAM):   _8_8 = 0;
23891     +_8_9 = 0;
MPRINT(EM_DIAGRAM):   _8_9 = 0;
23892     +if missing( tumor_size ) then do;
MPRINT(EM_DIAGRAM):   if missing( tumor_size ) then do;
23893     +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
23894     +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
23895     +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
23896     +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
23897     +   _8_4 = .;
MPRINT(EM_DIAGRAM):   _8_4 = .;
23898     +   _8_5 = .;
MPRINT(EM_DIAGRAM):   _8_5 = .;
23899     +   _8_6 = .;
MPRINT(EM_DIAGRAM):   _8_6 = .;
23900     +   _8_7 = .;
MPRINT(EM_DIAGRAM):   _8_7 = .;
23901     +   _8_8 = .;
MPRINT(EM_DIAGRAM):   _8_8 = .;
23902     +   _8_9 = .;
MPRINT(EM_DIAGRAM):   _8_9 = .;
23903     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23904     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23905     +end;
MPRINT(EM_DIAGRAM):   end;
23906     +else do;
MPRINT(EM_DIAGRAM):   else do;
23907     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
23908     +   %DMNORMCP( tumor_size , _dm5 )
MPRINT(DMNORMCP):   _dm5=dmnorm(tumor_size,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
23909     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
23910     +   if _dm5 <= '35-39'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '35-39' then do;
23911     +      if _dm5 <= '20-24'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '20-24' then do;
23912     +         if _dm5 <= '15-19'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '15-19' then do;
23913     +            if _dm5 = '0-4'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '0-4' then do;
23914     +               _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
23915     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23916     +            end;
MPRINT(EM_DIAGRAM):   end;
23917     +            else do;
MPRINT(EM_DIAGRAM):   else do;
23918     +               if _dm5 = '15-19'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '15-19' then do;
23919     +                  _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
23920     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23921     +               end;
MPRINT(EM_DIAGRAM):   end;
23922     +            end;
MPRINT(EM_DIAGRAM):   end;
23923     +         end;
MPRINT(EM_DIAGRAM):   end;
23924     +         else do;
MPRINT(EM_DIAGRAM):   else do;
23925     +            if _dm5 = '20-24'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '20-24' then do;
23926     +               _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
23927     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23928     +            end;
MPRINT(EM_DIAGRAM):   end;
23929     +         end;
MPRINT(EM_DIAGRAM):   end;
23930     +      end;
MPRINT(EM_DIAGRAM):   end;
23931     +      else do;
MPRINT(EM_DIAGRAM):   else do;
23932     +         if _dm5 <= '30-34'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '30-34' then do;
23933     +            if _dm5 = '25-29'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '25-29' then do;
23934     +               _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
23935     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23936     +            end;
MPRINT(EM_DIAGRAM):   end;
23937     +            else do;
MPRINT(EM_DIAGRAM):   else do;
23938     +               if _dm5 = '30-34'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '30-34' then do;
23939     +                  _8_4 = 1;
MPRINT(EM_DIAGRAM):   _8_4 = 1;
23940     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23941     +               end;
MPRINT(EM_DIAGRAM):   end;
23942     +            end;
MPRINT(EM_DIAGRAM):   end;
23943     +         end;
MPRINT(EM_DIAGRAM):   end;
23944     +         else do;
MPRINT(EM_DIAGRAM):   else do;
23945     +            if _dm5 = '35-39'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '35-39' then do;
23946     +               _8_5 = 1;
MPRINT(EM_DIAGRAM):   _8_5 = 1;
23947     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23948     +            end;
MPRINT(EM_DIAGRAM):   end;
23949     +         end;
MPRINT(EM_DIAGRAM):   end;
23950     +      end;
MPRINT(EM_DIAGRAM):   end;
23951     +   end;
MPRINT(EM_DIAGRAM):   end;
23952     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23953     +      if _dm5 <= '44848'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '44848' then do;
23954     +         if _dm5 <= '44690'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '44690' then do;
23955     +            if _dm5 = '40-44'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '40-44' then do;
23956     +               _8_6 = 1;
MPRINT(EM_DIAGRAM):   _8_6 = 1;
23957     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23958     +            end;
MPRINT(EM_DIAGRAM):   end;
23959     +            else do;
MPRINT(EM_DIAGRAM):   else do;
23960     +               if _dm5 = '44690'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '44690' then do;
23961     +                  _8_7 = 1;
MPRINT(EM_DIAGRAM):   _8_7 = 1;
23962     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23963     +               end;
MPRINT(EM_DIAGRAM):   end;
23964     +            end;
MPRINT(EM_DIAGRAM):   end;
23965     +         end;
MPRINT(EM_DIAGRAM):   end;
23966     +         else do;
MPRINT(EM_DIAGRAM):   else do;
23967     +            if _dm5 = '44848'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '44848' then do;
23968     +               _8_8 = 1;
MPRINT(EM_DIAGRAM):   _8_8 = 1;
23969     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23970     +            end;
MPRINT(EM_DIAGRAM):   end;
23971     +         end;
MPRINT(EM_DIAGRAM):   end;
23972     +      end;
MPRINT(EM_DIAGRAM):   end;
23973     +      else do;
MPRINT(EM_DIAGRAM):   else do;
23974     +         if _dm5 = '45-49'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '45-49' then do;
23975     +            _8_9 = 1;
MPRINT(EM_DIAGRAM):   _8_9 = 1;
23976     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23977     +         end;
MPRINT(EM_DIAGRAM):   end;
23978     +         else do;
MPRINT(EM_DIAGRAM):   else do;
23979     +            if _dm5 = '50-54'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '50-54' then do;
23980     +               _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
23981     +               _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
23982     +               _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
23983     +               _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
23984     +               _8_4 = -1;
MPRINT(EM_DIAGRAM):   _8_4 = -1;
23985     +               _8_5 = -1;
MPRINT(EM_DIAGRAM):   _8_5 = -1;
23986     +               _8_6 = -1;
MPRINT(EM_DIAGRAM):   _8_6 = -1;
23987     +               _8_7 = -1;
MPRINT(EM_DIAGRAM):   _8_7 = -1;
23988     +               _8_8 = -1;
MPRINT(EM_DIAGRAM):   _8_8 = -1;
23989     +               _8_9 = -1;
MPRINT(EM_DIAGRAM):   _8_9 = -1;
23990     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23991     +            end;
MPRINT(EM_DIAGRAM):   end;
23992     +         end;
MPRINT(EM_DIAGRAM):   end;
23993     +      end;
MPRINT(EM_DIAGRAM):   end;
23994     +   end;
MPRINT(EM_DIAGRAM):   end;
23995     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
23996     +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
23997     +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
23998     +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
23999     +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
24000     +      _8_4 = .;
MPRINT(EM_DIAGRAM):   _8_4 = .;
24001     +      _8_5 = .;
MPRINT(EM_DIAGRAM):   _8_5 = .;
24002     +      _8_6 = .;
MPRINT(EM_DIAGRAM):   _8_6 = .;
24003     +      _8_7 = .;
MPRINT(EM_DIAGRAM):   _8_7 = .;
24004     +      _8_8 = .;
MPRINT(EM_DIAGRAM):   _8_8 = .;
24005     +      _8_9 = .;
MPRINT(EM_DIAGRAM):   _8_9 = .;
24006     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
24007     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
24008     +   end;
MPRINT(EM_DIAGRAM):   end;
24009     +end;
MPRINT(EM_DIAGRAM):   end;
24010     +
24011     +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
24012     +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
24013     +   _P0 = 0.2920353982;
MPRINT(EM_DIAGRAM):   _P0 = 0.2920353982;
24014     +   _P1 = 0.7079646018;
MPRINT(EM_DIAGRAM):   _P1 = 0.7079646018;
24015     +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
24016     +end;
MPRINT(EM_DIAGRAM):   end;
24017     +
24018     +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
24019     +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
24020     +drop _LP0 ;
MPRINT(EM_DIAGRAM):   drop _LP0 ;
24021     +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
24022     +
24023     +***  Effect: REP_deg_malig ;
MPRINT(EM_DIAGRAM):   *** Effect: REP_deg_malig ;
24024     +_TEMP = REP_deg_malig ;
MPRINT(EM_DIAGRAM):   _TEMP = REP_deg_malig ;
24025     +_LP0 = _LP0 + (    0.74188815265941 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74188815265941 * _TEMP);
24026     +
24027     +***  Effect: age ;
MPRINT(EM_DIAGRAM):   *** Effect: age ;
24028     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
24029     +_LP0 = _LP0 + (     1.2711526472824) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.2711526472824) * _TEMP * _1_0;
24030     +_LP0 = _LP0 + (    3.51118587377913) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.51118587377913) * _TEMP * _1_1;
24031     +_LP0 = _LP0 + (    1.77015584013962) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.77015584013962) * _TEMP * _1_2;
24032     +_LP0 = _LP0 + (    3.24429045271765) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.24429045271765) * _TEMP * _1_3;
24033     +
24034     +***  Effect: breast ;
MPRINT(EM_DIAGRAM):   *** Effect: breast ;
24035     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
24036     +_LP0 = _LP0 + (   -0.55362156774278) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.55362156774278) * _TEMP * _2_0;
24037     +
24038     +***  Effect: breast_quad ;
MPRINT(EM_DIAGRAM):   *** Effect: breast_quad ;
24039     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
24040     +_LP0 = _LP0 + (    13.7360898428639) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 13.7360898428639) * _TEMP * _3_0;
24041     +_LP0 = _LP0 + (   -1.34657631410209) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.34657631410209) * _TEMP * _3_1;
24042     +_LP0 = _LP0 + (   -2.87020658947285) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.87020658947285) * _TEMP * _3_2;
24043     +_LP0 = _LP0 + (   -3.60528108373917) * _TEMP * _3_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.60528108373917) * _TEMP * _3_3;
24044     +_LP0 = _LP0 + (   -2.02455025813794) * _TEMP * _3_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.02455025813794) * _TEMP * _3_4;
24045     +
24046     +***  Effect: inv_nodes ;
MPRINT(EM_DIAGRAM):   *** Effect: inv_nodes ;
24047     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
24048     +_LP0 = _LP0 + (   -3.92999632834698) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.92999632834698) * _TEMP * _4_0;
24049     +_LP0 = _LP0 + (   -1.85577896916898) * _TEMP * _4_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.85577896916898) * _TEMP * _4_1;
24050     +_LP0 = _LP0 + (    11.4860062818446) * _TEMP * _4_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 11.4860062818446) * _TEMP * _4_2;
24051     +_LP0 = _LP0 + (   -2.40138030631945) * _TEMP * _4_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.40138030631945) * _TEMP * _4_3;
24052     +_LP0 = _LP0 + (   -1.69160020226667) * _TEMP * _4_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.69160020226667) * _TEMP * _4_4;
24053     +
24054     +***  Effect: irradiat ;
MPRINT(EM_DIAGRAM):   *** Effect: irradiat ;
24055     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
24056     +_LP0 = _LP0 + (    0.05106811531383) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05106811531383) * _TEMP * _5_0;
24057     +
24058     +***  Effect: menopause ;
MPRINT(EM_DIAGRAM):   *** Effect: menopause ;
24059     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
24060     +_LP0 = _LP0 + (    3.68241923615777) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.68241923615777) * _TEMP * _6_0;
24061     +_LP0 = _LP0 + (   -8.03309066307678) * _TEMP * _6_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -8.03309066307678) * _TEMP * _6_1;
24062     +
24063     +***  Effect: node_caps ;
MPRINT(EM_DIAGRAM):   *** Effect: node_caps ;
24064     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
24065     +_LP0 = _LP0 + (   -9.61607022474882) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -9.61607022474882) * _TEMP * _7_0;
24066     +_LP0 = _LP0 + (     4.8963217947722) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.8963217947722) * _TEMP * _7_1;
24067     +
24068     +***  Effect: tumor_size ;
MPRINT(EM_DIAGRAM):   *** Effect: tumor_size ;
24069     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
24070     +_LP0 = _LP0 + (   -10.0604143863662) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -10.0604143863662) * _TEMP * _8_0;
24071     +_LP0 = _LP0 + (     4.6393813293927) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.6393813293927) * _TEMP * _8_1;
24072     +_LP0 = _LP0 + (    5.07127301211026) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.07127301211026) * _TEMP * _8_2;
24073     +_LP0 = _LP0 + (    5.06886354257634) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.06886354257634) * _TEMP * _8_3;
24074     +_LP0 = _LP0 + (    5.07640420879079) * _TEMP * _8_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.07640420879079) * _TEMP * _8_4;
24075     +_LP0 = _LP0 + (    3.66865920399611) * _TEMP * _8_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.66865920399611) * _TEMP * _8_5;
24076     +_LP0 = _LP0 + (    5.25094886049268) * _TEMP * _8_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.25094886049268) * _TEMP * _8_6;
24077     +_LP0 = _LP0 + (   -8.25096914859845) * _TEMP * _8_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -8.25096914859845) * _TEMP * _8_7;
24078     +_LP0 = _LP0 + (   -7.96985669817867) * _TEMP * _8_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -7.96985669817867) * _TEMP * _8_8;
24079     +_LP0 = _LP0 + (   -8.99285729799633) * _TEMP * _8_9;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -8.99285729799633) * _TEMP * _8_9;
24080     +
24081     +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
24082     +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
24083     +drop _LPMAX;
MPRINT(EM_DIAGRAM):   drop _LPMAX;
24084     +_LPMAX= 0;
MPRINT(EM_DIAGRAM):   _LPMAX= 0;
24085     +_LP0 =    -12.2948238272586 + _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = -12.2948238272586 + _LP0;
24086     +if _LPMAX < _LP0 then _LPMAX = _LP0;
MPRINT(EM_DIAGRAM):   if _LPMAX < _LP0 then _LPMAX = _LP0;
24087     +_LP0 = exp(_LP0 - _LPMAX);
MPRINT(EM_DIAGRAM):   _LP0 = exp(_LP0 - _LPMAX);
24088     +_LPMAX = exp(-_LPMAX);
MPRINT(EM_DIAGRAM):   _LPMAX = exp(-_LPMAX);
24089     +_P1 = 1 / (_LPMAX + _LP0);
MPRINT(EM_DIAGRAM):   _P1 = 1 / (_LPMAX + _LP0);
24090     +_P0 = _LP0 * _P1;
MPRINT(EM_DIAGRAM):   _P0 = _LP0 * _P1;
24091     +_P1 = _LPMAX * _P1;
MPRINT(EM_DIAGRAM):   _P1 = _LPMAX * _P1;
24092     +
24093     +REGDR1:
24094     +
24095     +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
24096     +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
24097     +   R_classrecurrence_events = .;
MPRINT(EM_DIAGRAM):   R_classrecurrence_events = .;
24098     +   R_classno_recurrence_events = .;
MPRINT(EM_DIAGRAM):   R_classno_recurrence_events = .;
24099     +end;
MPRINT(EM_DIAGRAM):   end;
24100     +else do;
MPRINT(EM_DIAGRAM):   else do;
24101     +    label R_classrecurrence_events = 'Residual: class=recurrence-events' ;
MPRINT(EM_DIAGRAM):   label R_classrecurrence_events = 'Residual: class=recurrence-events' ;
24102     +    label R_classno_recurrence_events =
24103     +'Residual: class=no-recurrence-events' ;
MPRINT(EM_DIAGRAM):   label R_classno_recurrence_events = 'Residual: class=no-recurrence-events' ;
24104     +   R_classrecurrence_events = - _P0;
MPRINT(EM_DIAGRAM):   R_classrecurrence_events = - _P0;
24105     +   R_classno_recurrence_events = - _P1;
MPRINT(EM_DIAGRAM):   R_classno_recurrence_events = - _P1;
24106     +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
24107     +      when (0)  R_classrecurrence_events = R_classrecurrence_events + 1;
MPRINT(EM_DIAGRAM):   when (0) R_classrecurrence_events = R_classrecurrence_events + 1;
24108     +      when (1)  R_classno_recurrence_events = R_classno_recurrence_events + 1;
MPRINT(EM_DIAGRAM):   when (1) R_classno_recurrence_events = R_classno_recurrence_events + 1;
24109     +   end;
MPRINT(EM_DIAGRAM):   end;
24110     +end;
MPRINT(EM_DIAGRAM):   end;
24111     +
24112     +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
24113     +label P_classrecurrence_events = 'Predicted: class=recurrence-events' ;
MPRINT(EM_DIAGRAM):   label P_classrecurrence_events = 'Predicted: class=recurrence-events' ;
24114     +label P_classno_recurrence_events = 'Predicted: class=no-recurrence-events' ;
MPRINT(EM_DIAGRAM):   label P_classno_recurrence_events = 'Predicted: class=no-recurrence-events' ;
24115     +P_classrecurrence_events = _P0;
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = _P0;
24116     +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
24117     +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
24118     +P_classno_recurrence_events = _P1;
MPRINT(EM_DIAGRAM):   P_classno_recurrence_events = _P1;
24119     +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
24120     +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
24121     +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
24122     +end;
MPRINT(EM_DIAGRAM):   end;
24123     +I_class = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_class = REGDRF[_IY];
24124     +U_class = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_class = REGDRU[_IY];
24125     +
24126     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
24127     +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
24128     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
24129      run;

NOTE: DATA STEP view saved on file EMWS1.REG_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS_TEST.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
24130      quit;
24131      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
24132      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
24133      * Reg: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Reg: Computing metadata for TRAIN data;
24134      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.REG_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "D:\\BAN210PA\Workspaces\EMWS1\Reg\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Reg_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Reg_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Reg_TRAIN out=WORK.M0W67_CQ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0W67_CQ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0W67_CQ(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0W67_CQ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0W67_CQ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M03K9BDZ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M03K9BDZ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M03K9BDZ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0QCZHDY(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M03K9BDZ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M03K9BDZ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M03K9BDZ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M03K9BDZ;
MPRINT(EMADVISECOLUMNS):   set WORK.M03K9BDZ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Trans_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Trans_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Reg_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Reg";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("CLASS") model = "Reg";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
24479      data EMWS1.Reg_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Reg_EMINFO;
24480      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
24481      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
24482      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.REG_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
24486      run;
24487      proc sort data = EMWS1.Reg_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Reg_EMINFO NOTHREADS;
24488      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
24489      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.REG_EMINFO.
NOTE: The data set EMWS1.REG_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS1.REG_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      
NOTE: View EMWS1.REG_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      
NOTE: View EMWS1.REG_TEST.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
